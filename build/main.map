{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helpers/db.connexion.js","webpack:///./src/helpers/jwt.js","webpack:///./src/helpers/passport.js","webpack:///./src/index.js","webpack:///./src/routes/index.js","webpack:///./src/routes/login.js","webpack:///./src/routes/realtime.js","webpack:///./src/routes/users.js","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"dotenv/config\"","webpack:///external \"express\"","webpack:///external \"express-session\"","webpack:///external \"express-validator\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"morgan\"","webpack:///external \"mysql\"","webpack:///external \"passport\"","webpack:///external \"passport-local\"","webpack:///external \"socket.io\""],"names":["mysql","require","connection","createConnection","host","user","password","database","connect","err","console","log","query","result","module","exports","secretKey","process","env","key","issue","payload","expiresIn","jwt","sign","LocalStrategy","Strategy","bcrypt","passport","use","usernameField","passwordField","passReqToCallback","req","email","done","fields","length","flash","newUserMysql","username","hashSync","insertQuery","rows","id","insertId","results","hashedPassword","compare","response","user_id","userID","login","serializeUser","deserializeUser","express","socket","cors","morgan","bodyParser","expressValidator","session","default","app","port","PORT","server","listen","static","origin","methods","credentials","json","urlencoded","extended","secret","name","resave","saveUninitialized","cookie","maxAge","initialize","io","realtimeRouter","userRouter","loginRouter","get","res","next","isAuthenticated","Router","post","authenticate","courseName","description","body","status","send","message","content","checkBody","notEmpty","len","isEmail","matches","equals","errors","validationErrors","JSON","stringify","confirmedPassword","firstname","lastname","avatarUrl","university","role","saltRounds","hash"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'user strict'\n\nconst mysql = require('mysql');\n\nconst connection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"\",\n  database: \"OmnivizTest\",\n});\n\nconnection.connect(function(err) {\n  if (err) throw err;\n  console.log(\"DB Connected!\");\n\n  // création de la dB\n  connection.query(\"CREATE DATABASE IF NOT EXISTS OmnivizTest CHARACTER SET 'utf8'\", function (err, result) {\n    if (err) throw err;\n    console.log(\"database created\");\n  });\n\n  connection.query(\"CREATE TABLE IF NOT EXISTS OmnivizTest.users (userID INT NOT NULL UNIQUE AUTO_INCREMENT, username VARCHAR(50) NOT NULL UNIQUE, email VARCHAR(250) NOT NULL UNIQUE, createdat TIMESTAMP, firstname VARCHAR(255), lastname VARCHAR(255), avatarUrl VARCHAR(500), university VARCHAR(255), password VARCHAR(40) NOT NULL, role VARCHAR(30))\", function(err, result) {\n    if (err) throw err;\n    console.log(\"Table users created\")\n  })\n});\n\nmodule.exports = connection","import jwt from 'jsonwebtoken';\nimport \"dotenv/config\";\n\nconst secretKey = process.env.key\n\nexport default {\n\n    //Sign Token\n    issue(payload, expiresIn){\n      return jwt.sign(payload, secretKey, {expiresIn: 10800})\n  }\n}","const LocalStrategy   = require('passport-local').Strategy;\n\n\nconst bcrypt = require('bcrypt');\nimport connection from '../helpers/db.connexion';\n\n// expose this function to our app using module.exports\nexport default function(passport) {\n\n    // =========================================================================\n    // passport session setup ==================================================\n    // =========================================================================\n    // required for persistent login sessions\n    // passport needs ability to serialize and unserialize users out of session\n\n    // used to serialize the user for the session\n\n\n\n    // =========================================================================\n    // LOCAL SIGNUP ============================================================\n    // =========================================================================\n    // we are using named strategies since we have one for login and one for signup\n    // by default, if there was no name, it would just be called 'local'\n\n    passport.use(\n        'local-signup',\n        new LocalStrategy({\n            // by default, local strategy uses username and password, we will override with email\n            usernameField : 'email',\n            passwordField : 'password',\n            passReqToCallback : true // allows us to pass back the entire request to the callback\n        },\n        function(req, email, password, done) {\n            // find a user whose email is the same as the forms email\n            // we are checking to see if the user trying to register already exists\n            connection.query(\"SELECT * FROM users WHERE email = ?\",[email], function(err, result, fields) {\n                if (err)\n                    return done(err);\n                if (result.length > 0) {\n                    console.log('email already in use')\n                    return done(null, false, req.flash('signupMessage', 'Email is already in use.'));\n                } else {\n                    // if there is no user with that email\n                    // create the user\n                    var newUserMysql = {\n                        username: email,\n                        password: bcrypt.hashSync(password, null, null)  // use the generateHash function in our user model\n                    };\n\n                    var insertQuery = \"INSERT INTO users ( email, password ) values (?,?)\";\n\n                    connection.query(insertQuery,[newUserMysql.email, newUserMysql.password],function(err, rows) {\n                        newUserMysql.id = rows.insertId;\n\n                        return done(null, newUserMysql);\n                    });\n                }\n            });\n        })\n    );\n\n    // =========================================================================\n    // LOCAL LOGIN =============================================================\n    // =========================================================================\n    // we are using named strategies since we have one for login and one for signup\n    // by default, if there was no name, it would just be called 'local'\n\n    passport.use(new LocalStrategy({\n            // by default, local strategy uses username and password, we will override with email\n            usernameField : 'email',\n            passwordField : 'password',\n            passReqToCallback : true // allows us to pass back the entire request to the callback\n        },\n        function(req, email, password, done) { // callback with email and password from our form\n            connection.query(\"SELECT * FROM users WHERE email = ?\",[email], function(err, results, fields){\n                if (err)\n                    return done(err);\n                if (results.length === 0) {\n                    console.log('no user found');\n                    return done(null, false); // req.flash is the way to set flashdata using connect-flash\n                } else {\n                    let hashedPassword = results[0].password;\n\n                    // if the user is found but the password is wrong\n                    bcrypt.compare(password, hashedPassword, function(err, response){\n                        console.log('hashedpassword :', hashedPassword)\n                        console.log('password :', password)\n                        if(response == true){\n                            // all is well, return successful user\n                            console.log(results)\n                            const user_id = results[0].userID\n                            console.log('user id id :', user_id)\n                            req.login(user_id, function(err) {\n                                if(err) throw(err)\n                                console.log('req login :', user_id)\n                            })\n                            return done(null, results);\n                        } else {\n                                console.log('wrong password')\n                                return done(null, false); // create the loginMessage and save it to session as flashdata\n                            }\n                        });\n                    }\n                })\n            }\n        )\n    )\n\n    passport.serializeUser(function(user_id, done) {\n        console.log('serialize usr_id: ', user_id)\n\n        done(null, user_id);\n    });\n\n    // used to deserialize the user\n    passport.deserializeUser(function(user_id, done) {\n        console.log('deserialize usr id: ', user_id)\n\n        connection.query(\"SELECT * FROM users WHERE id = ? \",[user_id], function(err, results){\n            done(null, results[0]);\n            console.log('user : ', results[0])\n        });\n    });\n};","const express = require ('express');\nconst socket = require ('socket.io');\nconst cors = require('cors');\nconst morgan = require('morgan');\nconst bodyParser = require('body-parser');\nconst expressValidator = require('express-validator');\nconst bcrypt = require('bcrypt');\n//authentication packages\nconst session = require('express-session');\nconst passport = require('passport');\nrequire('./helpers/passport').default(passport)\n\nconst app = express();\n\nconst port = process.env.PORT || 5000;\nconst server = app.listen(port, () => console.log(`server is running on port ${port}`));\n\nimport { realtimeRouter } from './routes/index';\nimport { userRouter } from './routes/users';\nimport { loginRouter } from './routes/login';\n\n\n//static files\napp.use(express.static('public'));\n\n\n//logger\napp.use(morgan('combined'));\n\napp.use(cors({\n  origin:'http://localhost:8080',\n  methods:['GET', 'POST', 'PUT', 'DELETE'],\n  credentials: true\n}));\n\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(expressValidator());\n\n// express sessions\napp.use(session({\n  secret: 'thedudeabides',\n  name: 'sid',\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    maxAge: 1000 * 60 * 60 * 2\n  }\n  // cookie: { secure: true }\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n\n// Socket Setup\nconst io = socket(server);\n\napp.use('/realtime', realtimeRouter);\napp.use('/users', userRouter);\napp.use('/login', loginRouter);\n\napp.get('/', (req, res, next) => {\n  // req.session.name = 'nico';\n  console.log(req.session)\n  console.log('req.user :', req.user);\n  console.log('authenticated :', req.isAuthenticated());\n})\n\n\n// // error handler\n// app.use(function(err, req, res, next) {\n//   // set locals, only providing error in development\n//   res.locals.message = err.message;\n//   res.locals.error = req.app.get('env') === 'development' ? err : {};\n// })\n// // io.on('connection', function(socket){\n// //   socket.on('connect', function() {\n// //     io.emit('user connected');\n// //   });\n// //   socket.on('disconnect', function () {\n// //     io.emit('user disconnected');\n// //   });\n// //   console.log('socket connected', socket.id)\n// //   socket.emit('messageChannel', 'hello')\n// //   socket.on('pingServer', (data) => {\n// //     console.log(data)\n// //   })\n// //   socket.on('join', (data) => {\n// //     console.log('username: ', data.username);\n// //     console.log('room: ', data.room)\n// //     console.log('id: ', socket.id)\n// //     const user = data.username;\n// //     const room = data.room;\n// //     const userId = socket.id;\n// //     socket.emit('roomCreation', {\n// //     user: user,\n// //     room: room,\n// //     userId: userId\n// //     });\n// //     socket.join(room, console.log(`${user} has joined ${room}`));\n// //     socket.emit('joiningEvent', `${user} has joined the room ${room}`);\n// //     socket.broadcast.to(room).emit('joiningEvent', `${user} has joined the room ${room}`);\n// //     })\n\n","export { realtimeRouter } from './realtime';\nexport { userRouter } from './users';\nexport { loginRouter } from './login';\n","import express from 'express'\nimport jwt from '../helpers/jwt';\nimport 'dotenv/config';\nimport connection from '../helpers/db.connexion';\n\nconst secret = process.env.key;\nconst passport = require('passport')\nexport const loginRouter = express.Router();\n\n\nloginRouter.post('/', passport.authenticate('local',  (req, res) => {\n  // const user_id = results.userID;\n  // console.log('user.id: ', req.id)\n  // req.login(req.id)\n  // const { password, email } = req.body\n\n  // // const user = _users.find((user) => user.username === req.body.username);\n  // let query = `SELECT * FROM users WHERE email = '${email}'`;\n\n  // connection.query(query, (err, results) => {\n\n  //   if(results.length === 0) return res.status(404).send('User not found')\n  //     if(results[0].password !== password) return res.status(404).send('Password incorrect')\n\n  //     const token = jwt.issue({\n  //       email\n  //     }, secret, {expiresIn: 18000})\n  //     console.log(token)\n  //     res.json({'token': token})\n  //   })\n  })\n)","import express from 'express';\n\n\nexport const realtimeRouter = express.Router();\n\nrealtimeRouter.post('/createCourse', (req, res) => {\n  const { username, courseName, description } = req.body;\n\n\n})\n","import express from 'express';\nimport connection from '../helpers/db.connexion';\nconst mysql = require('mysql');\nconst expressValidator = require('express-validator');\nconst bcrypt = require('bcrypt');\n\n\nexport const userRouter = express.Router();\n\n\nuserRouter.get('/', (req, res) => {\n  connection.query('SELECT * FROM users ', (err, results, fields) => {\n    if (err) {\n      console.log(err);\n      res.status(400).send({ status: false, message: 'User not created'})\n      // res.send({\n      //   err\n      // })\n    }else {\n      console.log(results)\n      res.status(200).send({status: true, content: results});\n    }\n  });\n});\n\nuserRouter.post('/', (req, res) => {\n\n  console.log('ça marche')\n  req.checkBody('username', 'Username field cannot be empty.').notEmpty();\n  req.checkBody('username', 'Username must be between 4-15 characters long.').len(4, 15);\n  req.checkBody('email', 'The email you entered is invalid, please try again.').isEmail();\n  req.checkBody('email', 'Email address must be between 4-100 characters long, please try again.').len(4, 100);\n  req.checkBody('email', 'Email field cannot be empty.').notEmpty();\n  req.checkBody('password', 'Password field cannot be empty.').notEmpty();\n  req.checkBody('password', 'Password must be between 8-100 characters long.').len(8, 100);\n  req.checkBody(\"password\", \"Password must include one lowercase character, one uppercase character, a number, and a special character.\").matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.* )(?=.*[^a-zA-Z0-9]).{8,}$/, \"i\");\n  req.checkBody('confirmedPassword', 'Password must be between 8-100 characters long.').len(8, 100);\n  req.checkBody('confirmedPassword', 'Passwords do not match, please try again.').equals(req.body.password);\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    console.log(`errors: ${JSON.stringify(errors)}`);\n    res.send({\n      errors: errors\n    });\n  } else {\n    let body = req.body;\n    let email = body.email;\n    let username = body.username;\n    let password = body.password;\n    let confirmedPassword = body.confirmedPassword;\n    let firstname = body.firstname;\n    let lastname = body.lastname;\n    let avatarUrl = body.avatarUrl;\n    let university = body.university;\n    let role = body.role;\n\n    const saltRounds = 10;\n\n    bcrypt.hash(password, saltRounds, function(err, hash) {\n      let query = `INSERT INTO users (email, username, password, firstname, lastname, avatarUrl, university, role) VALUES ('${email}', '${username}', '${hash}', '${firstname}', '${lastname}', '${avatarUrl}', '${university}', '${role}')`;\n\n      connection.query(query, (err, results, fields) => {\n        if (err) {\n          console.log(err);\n          res.status(400).send({ status: false, message: 'User not created'})\n        }else{\n          console.log(results);\n          res.send({\n            status:200,\n            \"success\":\"new user registered sucessfully\",\n            content: results\n          });\n        };\n      });\n    });\n  };\n});","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv/config\");","module.exports = require(\"express\");","module.exports = require(\"express-session\");","module.exports = require(\"express-validator\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"morgan\");","module.exports = require(\"mysql\");","module.exports = require(\"passport\");","module.exports = require(\"passport-local\");","module.exports = require(\"socket.io\");"],"sourceRoot":""}