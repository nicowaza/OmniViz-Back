{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helpers/db.connexion.js","webpack:///./src/helpers/passport.js","webpack:///./src/helpers/verifyAuth.js","webpack:///./src/index.js","webpack:///./src/routes/rooms.js","webpack:///./src/routes/users.js","webpack:///./src/sockets/sockets.js","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"express-mysql-session\"","webpack:///external \"express-session\"","webpack:///external \"express-validator\"","webpack:///external \"morgan\"","webpack:///external \"mysql\"","webpack:///external \"passport\"","webpack:///external \"passport-local\"","webpack:///external \"socket.io\""],"names":["mysql","require","connection","createConnection","host","user","password","database","connect","err","console","log","query","result","module","exports","LocalStrategy","Strategy","bcrypt","passport","use","usernameField","passwordField","passReqToCallback","req","email","done","results","fields","length","message","hashedPassword","compare","response","serializeUser","userID","deserializeUser","id","verifiedAuth","res","next","isAuthenticated","send","status","express","cors","morgan","bodyParser","cookieParser","expressValidator","connectIO","session","MySQLStore","default","app","port","process","env","PORT","server","listen","io","static","origin","methods","credentials","json","urlencoded","extended","options","sessionStore","sessionMiddleware","secret","name","store","resave","saveUninitialized","cookie","maxAge","socket","request","initialize","userRouter","roomRouter","get","userdata","username","role","Router","post","checkBody","notEmpty","errors","validationErrors","JSON","stringify","body","title","description","authorID","createdat","startClass","endClass","content","len","isEmail","matches","equals","confirmedPassword","firstname","lastname","avatarUrl","university","saltRounds","hash","authenticate","login","logout","destroy","clearCookie","on","data","emit","socketUser","user_id","user_role","room","join","in","broadcast","to","color","tag","time","timestamp","leave"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA,MAAMA,KAAK,GAAGC,mBAAO,CAAC,oBAAD,CAArB;;AAEA,MAAMC,UAAU,GAAGF,KAAK,CAACG,gBAAN,CAAuB;AACxCC,MAAI,EAAE,WADkC;AAExCC,MAAI,EAAE,MAFkC;AAGxCC,UAAQ,EAAE,EAH8B;AAIxCC,UAAQ,EAAE;AAJ8B,CAAvB,CAAnB;AAOAL,UAAU,CAACM,OAAX,CAAmB,UAASC,GAAT,EAAc;AAC/B,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,SAAO,CAACC,GAAR,CAAY,eAAZ,EAF+B,CAI/B;;AACAT,YAAU,CAACU,KAAX,CAAiB,gEAAjB,EAAmF,UAAUH,GAAV,EAAeI,MAAf,EAAuB;AACxG,QAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTC,WAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAHD;AAKAT,YAAU,CAACU,KAAX,CAAiB,0UAAjB,EAA6V,UAASH,GAAT,EAAcI,MAAd,EAAsB;AACjX,QAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTC,WAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAHD;AAKAT,YAAU,CAACU,KAAX,CAAiB,8RAAjB,EAAiT,UAASH,GAAT,EAAcI,MAAd,EAAsB;AACrU,QAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTC,WAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAHD;AAKAT,YAAU,CAACU,KAAX,CAAiB,8RAAjB,EAAiT,UAASH,GAAT,EAAcI,MAAd,EAAsB;AACrU,QAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTC,WAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,GAHD;AAID,CAxBD;AA0BAG,MAAM,CAACC,OAAP,GAAiBb,UAAjB,C;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA,MAAMc,aAAa,GAAKf,mBAAO,CAAC,sCAAD,CAAP,CAA0BgB,QAAlD;;AACA,MAAMC,MAAM,GAAGjB,mBAAO,CAAC,sBAAD,CAAtB;;CAGA;;AACe,yEAASkB,QAAT,EAAmB;AAE9B;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEAA,UAAQ,CAACC,GAAT,CAAa,IAAIJ,aAAJ,CAAkB;AACvB;AACAK,iBAAa,EAAG,OAFO;AAGvBC,iBAAa,EAAG,UAHO;AAIvBC,qBAAiB,EAAG,IAJG,CAIE;;AAJF,GAAlB,EAMT,UAASC,GAAT,EAAcC,KAAd,EAAqBnB,QAArB,EAA+BoB,IAA/B,EAAqC;AAAE;AACnCxB,gEAAU,CAACU,KAAX,CAAiB,qCAAjB,EAAuD,CAACa,KAAD,CAAvD,EAAgE,UAAShB,GAAT,EAAckB,OAAd,EAAuBC,MAAvB,EAA+BvB,IAA/B,EAAoC;AAChG,UAAII,GAAJ,EACI,OAAOiB,IAAI,CAACjB,GAAD,CAAX;;AACJ,UAAIkB,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;AACtB;AACA;AACA,eAAOH,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEI,iBAAO,EAAG;AAAZ,SAAd,CAAX;AACH,OAJD,MAIO;AACH,YAAIC,cAAc,GAAGJ,OAAO,CAAC,CAAD,CAAP,CAAWrB,QAAhC,CADG,CAEH;;AACAY,cAAM,CAACc,OAAP,CAAe1B,QAAf,EAAyByB,cAAzB,EAAyC,UAAStB,GAAT,EAAcwB,QAAd,EAAuB;AAC5D,cAAGA,QAAH,EAAY;AACR;AACA,kBAAM5B,IAAI,GAAGsB,OAAO,CAAC,CAAD,CAApB;AACAjB,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,IAAtB,EAHQ,CAIR;;AACA,mBAAOqB,IAAI,CAAC,IAAD,EAAOrB,IAAP,EAAa;AAAEyB,qBAAO,EAAG;AAAZ,aAAb,CAAX;AACH,WAND,MAMO;AACCpB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EADD,CAEC;;AACA,mBAAOe,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEI,qBAAO,EAAE;AAAX,aAAd,CAAX,CAHD,CAG6D;AAC/D,WAXuD,CAY5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,SApBL;AAqBC;AACJ,KAhCL;AAiCC,GAxCI,CAAb;AA4CAX,UAAQ,CAACe,aAAT,CAAuB,UAAS7B,IAAT,EAAeqB,IAAf,EAAqB;AACxChB,WAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCN,IAAI,CAAC8B,MAAvC;AAEAT,QAAI,CAAC,IAAD,EAAOrB,IAAP,CAAJ;AACH,GAJD,EAvG8B,CA6G9B;;AACAc,UAAQ,CAACiB,eAAT,CAAyB,UAAS/B,IAAT,EAAeqB,IAAf,EAAqB;AAE1C,UAAMW,EAAE,GAAGhC,IAAI,CAAC8B,MAAhB;AACAzB,WAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC0B,EAApC;AACAnC,gEAAU,CAACU,KAAX,CAAiB,uCAAjB,EAAyD,CAACyB,EAAD,CAAzD,EAA+D,UAAS5B,GAAT,EAAcJ,IAAd,EAAmB;AAC9EqB,UAAI,CAAC,IAAD,EAAOrB,IAAP,CAAJ,CAD8E,CAE9E;AACH,KAHD;AAIH,GARD;AASH;AAAA,C;;;;;;;;;;;AC5HD,MAAMiC,YAAY,GAAG,UAAUd,GAAV,EAAee,GAAf,EAAoBC,IAApB,EAA0B;AAC7C;AACA;AACA;AACA;AACE,MAAIhB,GAAG,CAACiB,eAAJ,EAAJ,EAA2B;AACzB/B,WAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Ba,GAAG,CAACiB,eAAJ,EAA9B,EADyB,CAEzB;AACA;;AACA,WAAOD,IAAI,EAAX;AACD,GALD,MAKO;AACL9B,WAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCa,GAAG,CAACiB,eAAJ,EAAxC;AACAF,OAAG,CAACG,IAAJ,CAAS;AAACC,YAAM,EAAE,GAAT;AAAcb,aAAO,EAAC,cAAtB;AAAsCW,qBAAe,EAAEjB,GAAG,CAACiB,eAAJ;AAAvD,KAAT;AAAwF;AAC7F,CAbD;;AAeA3B,MAAM,CAACC,OAAP,GAAiBuB,YAAjB,C;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA,MAAMM,OAAO,GAAG3C,mBAAO,CAAE,wBAAF,CAAvB;;AAEA,MAAM4C,IAAI,GAAG5C,mBAAO,CAAC,kBAAD,CAApB;;AACA,MAAM6C,MAAM,GAAG7C,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAM8C,UAAU,GAAG9C,mBAAO,CAAC,gCAAD,CAA1B;;AACA,MAAM+C,YAAY,GAAG/C,mBAAO,CAAC,oCAAD,CAA5B;;AACA,MAAMgD,gBAAgB,GAAGhD,mBAAO,CAAC,4CAAD,CAAhC;;AACA,MAAMiB,MAAM,GAAGjB,mBAAO,CAAC,sBAAD,CAAtB,C,CACA;;;AACA,MAAMqC,YAAY,GAAGrC,mBAAO,CAAC,yDAAD,CAA5B;;AACA,MAAMiD,SAAS,GAAGjD,mBAAO,CAAC,sDAAD,CAAzB;;CAGA;;AACA,MAAMkD,OAAO,GAAGlD,mBAAO,CAAC,wCAAD,CAAvB;;AACA,MAAMmD,UAAU,GAAGnD,mBAAO,CAAC,oDAAD,CAAP,CAAiCkD,OAAjC,CAAnB;;AACA,MAAMhC,QAAQ,GAAGlB,mBAAO,CAAC,0BAAD,CAAxB,C,CACA;;;AAEAA,mBAAO,CAAC,qDAAD,CAAP,CAA8BoD,OAA9B,CAAsClC,QAAtC;;AAGA,MAAMmC,GAAG,GAAGV,OAAO,EAAnB;AAEA,MAAMW,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,MAAMC,MAAM,GAAGL,GAAG,CAACM,MAAJ,CAAWL,IAAX,EAAiB,MAAM7C,OAAO,CAACC,GAAR,CAAa,6BAA4B4C,IAAK,EAA9C,CAAvB,CAAf;AAEA,MAAMM,EAAE,GAAGX,SAAS,CAACS,MAAD,CAApB,C,CAEA;;AACAL,GAAG,CAAClC,GAAJ,CAAQwB,OAAO,CAACkB,MAAR,CAAe,WAAf,CAAR,E,CAEA;;AACAR,GAAG,CAAClC,GAAJ,CAAQ0B,MAAM,CAAC,UAAD,CAAd,E,CAEA;;AACAQ,GAAG,CAAClC,GAAJ,CAAQyB,IAAI,CAAC;AACXkB,QAAM,EAAC,uBADI;AAEXC,SAAO,EAAC,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,CAFG;AAGXC,aAAW,EAAE;AAHF,CAAD,CAAZ;AAMAX,GAAG,CAAClC,GAAJ,CAAQwB,OAAO,CAACsB,IAAR,EAAR;AACAZ,GAAG,CAAClC,GAAJ,CAAQwB,OAAO,CAACuB,UAAR,CAAmB;AAAEC,UAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAd,GAAG,CAAClC,GAAJ,CAAQ2B,UAAU,CAACmB,IAAX,EAAR;AACAZ,GAAG,CAAClC,GAAJ,CAAQ2B,UAAU,CAACoB,UAAX,CAAsB;AAAEC,UAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAd,GAAG,CAAClC,GAAJ,CAAQ4B,YAAY,EAApB;AACAM,GAAG,CAAClC,GAAJ,CAAQ6B,gBAAgB,EAAxB,E,CAEA;;AACA,MAAMoB,OAAO,GAAG;AACdjE,MAAI,EAAE,WADQ;AAEd;AACAC,MAAI,EAAE,MAHQ;AAIdC,UAAQ,EAAE,EAJI;AAKdC,UAAQ,EAAE;AALI,CAAhB;AAOA,MAAM+D,YAAY,GAAG,IAAIlB,UAAJ,CAAeiB,OAAf,CAArB,C,CAEA;;AACA,MAAME,iBAAiB,GAAGpB,OAAO,CAAC;AAChCqB,QAAM,EAAE,eADwB;AAEhCC,MAAI,EAAE,KAF0B;AAGhCC,OAAK,EAAEJ,YAHyB;AAIhCK,QAAM,EAAE,KAJwB;AAKhCC,mBAAiB,EAAE,KALa;AAMhCC,QAAM,EAAE;AACNC,UAAM,EAAE,OADF,CAGR;;AAHQ;AANwB,CAAD,CAAjC;AAWAxB,GAAG,CAAClC,GAAJ,CAAQmD,iBAAR,E,CAEA;;AACAV,EAAE,CAACzC,GAAH,CAAO,UAAU2D,MAAV,EAAkBvC,IAAlB,EAAwB;AAC7B+B,mBAAiB,CAACQ,MAAM,CAACC,OAAR,EAAiBD,MAAM,CAACC,OAAP,CAAezC,GAAhC,EAAqCC,IAArC,CAAjB;AACD,CAFD,E,CAIA;;AACAc,GAAG,CAAClC,GAAJ,CAAQD,QAAQ,CAAC8D,UAAT,EAAR;AACA3B,GAAG,CAAClC,GAAJ,CAAQD,QAAQ,CAACgC,OAAT,EAAR,E,CAGA;;AACA,MAAM+B,UAAU,GAAGjF,mBAAO,CAAC,6CAAD,CAAP,CAA0BoD,OAA1B,CAAkCQ,EAAlC,EAAsC1C,QAAtC,EAAgDmC,GAAhD,CAAnB;;AACA,MAAM6B,UAAU,GAAGlF,mBAAO,CAAC,6CAAD,CAAP,CAA0BoD,OAA1B,CAAkCQ,EAAlC,EAAsC1C,QAAtC,EAAgDmC,GAAhD,CAAnB;;AACAA,GAAG,CAAClC,GAAJ,CAAQ,QAAR,EAAkB8D,UAAlB;AACA5B,GAAG,CAAClC,GAAJ,CAAQ,QAAR,EAAkB+D,UAAlB;AAGA7B,GAAG,CAAC8B,GAAJ,CAAQ,GAAR,EAAa9C,YAAb,EAA2B,CAACd,GAAD,EAAMe,GAAN,EAAWC,IAAX,KAAoB;AAC7C,QAAMnC,IAAI,GAAGmB,GAAG,CAACnB,IAAJ,CAAS,CAAT,CAAb;AACA,QAAMgF,QAAQ,GAAG;AACfC,YAAQ,EAAEjF,IAAI,CAACiF,QADA;AAEf7D,SAAK,EAAEpB,IAAI,CAACoB,KAFG;AAGf8D,QAAI,EAAElF,IAAI,CAACkF;AAHI,GAAjB,CAF6C,CAO7C;AACA;AACA;;AACA7E,SAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCa,GAAG,CAACiB,eAAJ,EAAjC;AACD,CAXD,E;;;;;;;;;;;;AC1FA;AAAA,MAAMG,OAAO,GAAG3C,mBAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,mBAAO,CAAC,8DAAD,CAA1B;;AACA,MAAMqC,YAAY,GAAGrC,mBAAO,CAAC,0DAAD,CAA5B;;AACA,MAAMD,KAAK,GAAGC,mBAAO,CAAC,oBAAD,CAArB,C,CACA;;;AACA,MAAMkF,UAAU,GAAGvC,OAAO,CAAC4C,MAAR,EAAnB;AAEe,yEAASlC,GAAT,EAAcnC,QAAd,EAAwB0C,EAAxB,EAA4B;AAEzCsB,YAAU,CAACC,GAAX,CAAe,GAAf,EAAoB9C,YAApB,EAAkC,CAACd,GAAD,EAAMe,GAAN,KAAc;AAC9C;AACArC,cAAU,CAACU,KAAX,CAAiB,sBAAjB,EAAyC,CAACH,GAAD,EAAMkB,OAAN,EAAeC,MAAf,KAA0B;AACjE,UAAInB,GAAJ,EAAS;AACPC,eAAO,CAACC,GAAR,CAAYF,GAAZ;AACA8B,WAAG,CAACG,IAAJ,CAAS;AACPjC;AADO,SAAT;AAGD,OALD,MAKO;AACLC,eAAO,CAACC,GAAR,CAAYgB,OAAZ;AACAY,WAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAACC,gBAAM,EAAE,IAAT;AAAehB,iBAAO,EAAEA;AAAxB,SAArB;AACD;AACF,KAVD;AAUG;AACJ,GAbD;AAeAwD,YAAU,CAACM,IAAX,CAAgB,GAAhB,EAAqBnD,YAArB,EAAmC,CAACd,GAAD,EAAMe,GAAN,KAAc;AAE7Cf,OAAG,CAACkE,SAAJ,CAAc,OAAd,EAAuB,8BAAvB,EAAuDC,QAAvD;AAEA,UAAMC,MAAM,GAAGpE,GAAG,CAACqE,gBAAJ,EAAf;;AAEA,QAAID,MAAJ,EAAY;AACVlF,aAAO,CAACC,GAAR,CAAa,WAAUmF,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAuB,EAA9C;AACArD,SAAG,CAACG,IAAJ,CAAS;AACPC,cAAM,EAAC,GADA;AAEPiD,cAAM,EAAEA;AAFD,OAAT;AAID,KAND,MAMO;AACL,UAAII,IAAI,GAAGxE,GAAG,CAACwE,IAAf;AACA,YAAM;AAAEC,aAAF;AAASC,mBAAT;AAAsBC,gBAAtB;AAAgCC,iBAAhC;AAA2CC,kBAA3C;AAAuDC;AAAvD,UAAoEN,IAA1E;AAEA,UAAIpF,KAAK,GAAI,8FAA6FuF,QAAS,OAAMF,KAAM,OAAMC,WAAY,OAAME,SAAU,OAAMC,UAAW,OAAMC,QAAS,IAAjM;AAEA5F,aAAO,CAACC,GAAR,CAAYC,KAAZ;AAEEV,gBAAU,CAACU,KAAX,CAAiBA,KAAjB,EAAwB,CAACgF,MAAD,EAASjE,OAAT,EAAkBC,MAAlB,KAA6B;AACnD,YAAIgE,MAAJ,EAAY;AACVlF,iBAAO,CAACC,GAAR,CAAYiF,MAAZ;AACArD,aAAG,CAACG,IAAJ,CAAS;AACPC,kBAAM,EAAC,GADA;AAEPiD,kBAAM,EAACA;AAFA,WAAT;AAID,SAND,MAMM;AACJlF,iBAAO,CAACC,GAAR,CAAYgB,OAAZ;AACAY,aAAG,CAACG,IAAJ,CAAS;AACPC,kBAAM,EAAC,GADA;AAEP,uBAAU,mBAFH;AAGP4D,mBAAO,EAAE5E;AAHF,WAAT;AAKD;;AAAA;AACF,OAfD;AAgBD;AACJ,GArCH;AAsCA,SAAOwD,UAAP;AACD,C;;;;;;;;;;;;AC/DD;AAAA;AAAA;AAAA,MAAMvC,OAAO,GAAG3C,mBAAO,CAAC,wBAAD,CAAvB;;CAEA;;AACA,MAAMqC,YAAY,GAAGrC,mBAAO,CAAC,0DAAD,CAA5B;;AACA,MAAMD,KAAK,GAAGC,mBAAO,CAAC,oBAAD,CAArB;;AACA,MAAMgD,gBAAgB,GAAGhD,mBAAO,CAAC,4CAAD,CAAhC;;AACA,MAAMiB,MAAM,GAAGjB,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAM8E,MAAM,GAAG9E,mBAAO,CAAE,4BAAF,CAAtB;;AACA,MAAMkB,QAAQ,GAAGlB,mBAAO,CAAC,0BAAD,CAAxB;;AACAA,mBAAO,CAAC,sDAAD,CAAP,CAA+BoD,OAA/B,CAAuClC,QAAvC,E,CACA;;;AAEA,MAAM+D,UAAU,GAAGtC,OAAO,CAAC4C,MAAR,EAAnB;AAEe,yEAASlC,GAAT,EAAcnC,QAAd,EAAwB0C,EAAxB,EAA4B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEAqB,YAAU,CAACO,IAAX,CAAgB,WAAhB,EAA6B,CAACjE,GAAD,EAAMe,GAAN,KAAc;AAEzCf,OAAG,CAACkE,SAAJ,CAAc,UAAd,EAA0B,iCAA1B,EAA6DC,QAA7D;AACAnE,OAAG,CAACkE,SAAJ,CAAc,UAAd,EAA0B,gDAA1B,EAA4Ec,GAA5E,CAAgF,CAAhF,EAAmF,EAAnF;AACAhF,OAAG,CAACkE,SAAJ,CAAc,OAAd,EAAuB,qDAAvB,EAA8Ee,OAA9E;AACAjF,OAAG,CAACkE,SAAJ,CAAc,OAAd,EAAuB,wEAAvB,EAAiGc,GAAjG,CAAqG,CAArG,EAAwG,GAAxG;AACAhF,OAAG,CAACkE,SAAJ,CAAc,OAAd,EAAuB,8BAAvB,EAAuDC,QAAvD;AACAnE,OAAG,CAACkE,SAAJ,CAAc,UAAd,EAA0B,iCAA1B,EAA6DC,QAA7D;AACAnE,OAAG,CAACkE,SAAJ,CAAc,UAAd,EAA0B,iDAA1B,EAA6Ec,GAA7E,CAAiF,CAAjF,EAAoF,GAApF;AACAhF,OAAG,CAACkE,SAAJ,CAAc,UAAd,EAA0B,4GAA1B,EAAwIgB,OAAxI,CAAgJ,gEAAhJ,EAAkN,GAAlN;AACAlF,OAAG,CAACkE,SAAJ,CAAc,mBAAd,EAAmC,iDAAnC,EAAsFc,GAAtF,CAA0F,CAA1F,EAA6F,GAA7F;AACAhF,OAAG,CAACkE,SAAJ,CAAc,mBAAd,EAAmC,2CAAnC,EAAgFiB,MAAhF,CAAuFnF,GAAG,CAACwE,IAAJ,CAAS1F,QAAhG;AAEA,UAAMsF,MAAM,GAAGpE,GAAG,CAACqE,gBAAJ,EAAf;;AAEA,QAAID,MAAJ,EAAY;AACVlF,aAAO,CAACC,GAAR,CAAa,WAAUmF,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAuB,EAA9C;AACArD,SAAG,CAACG,IAAJ,CAAS;AACPC,cAAM,EAAC,GADA;AAEPiD,cAAM,EAAEA;AAFD,OAAT;AAID,KAND,MAMO;AACL,UAAII,IAAI,GAAGxE,GAAG,CAACwE,IAAf;AACA,UAAIvE,KAAK,GAAGuE,IAAI,CAACvE,KAAjB;AACA,UAAI6D,QAAQ,GAAGU,IAAI,CAACV,QAApB;AACA,UAAIhF,QAAQ,GAAG0F,IAAI,CAAC1F,QAApB;AACA,UAAIsG,iBAAiB,GAAGZ,IAAI,CAACY,iBAA7B;AACA,UAAIC,SAAS,GAAGb,IAAI,CAACa,SAArB;AACA,UAAIC,QAAQ,GAAGd,IAAI,CAACc,QAApB;AACA,UAAIC,SAAS,GAAGf,IAAI,CAACe,SAArB;AACA,UAAIC,UAAU,GAAGhB,IAAI,CAACgB,UAAtB;AACA,UAAIzB,IAAI,GAAGS,IAAI,CAACT,IAAhB;AAEA,YAAM0B,UAAU,GAAG,EAAnB;AAEA/F,YAAM,CAACgG,IAAP,CAAY5G,QAAZ,EAAsB2G,UAAtB,EAAkC,UAASxG,GAAT,EAAcyG,IAAd,EAAoB;AACpD,YAAItG,KAAK,GAAI,4GAA2Ga,KAAM,OAAM6D,QAAS,OAAM4B,IAAK,OAAML,SAAU,OAAMC,QAAS,OAAMC,SAAU,OAAMC,UAAW,OAAMzB,IAAK,IAAnO;AAEArF,oEAAU,CAACU,KAAX,CAAiBA,KAAjB,EAAwB,CAACH,GAAD,EAAMkB,OAAN,EAAeC,MAAf,KAA0B;AAChD,cAAIgE,MAAJ,EAAY;AACVlF,mBAAO,CAACC,GAAR,CAAYiF,MAAZ;AACArD,eAAG,CAACG,IAAJ,CAAS;AACPC,oBAAM,EAAC,GADA;AAEPiD,oBAAM,EAACA;AAFA,aAAT;AAID,WAND,MAMK;AACHlF,mBAAO,CAACC,GAAR,CAAYgB,OAAZ;AACAY,eAAG,CAACG,IAAJ,CAAS;AACPC,oBAAM,EAAC,GADA;AAEP,yBAAU,iCAFH;AAGP4D,qBAAO,EAAE5E;AAHF,aAAT;AAKD;;AAAA;AACF,SAfD;AAgBD,OAnBD;AAoBD;;AAAA;AACF,GAxDD;AA0DAuD,YAAU,CAACO,IAAX,CAAgB,QAAhB,EAA0B,CAACjE,GAAD,EAAMe,GAAN,EAAWC,IAAX,KAAoB;AAC5CrB,YAAQ,CAACgG,YAAT,CAAsB,OAAtB,EAAgC,CAAC1G,GAAD,EAAMJ,IAAN,EAAYyB,OAAZ,KAAwB;AACtD,UAAGrB,GAAH,EAAO;AACL8B,WAAG,CAACG,IAAJ,CAAS;AAACC,gBAAM,EAAE,GAAT;AAAciD,gBAAM,EAAE9D;AAAtB,SAAT;AACD,OAFD,MAGK;AACHN,WAAG,CAAC4F,KAAJ,CAAU/G,IAAV,EAAiBI,GAAD,IAAS;AACvB,cAAGA,GAAH,EAAQ;AACNC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AACDC,iBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Ba,GAAG,CAACiB,eAAJ,EAA3B;AACAF,aAAG,CAACG,IAAJ,CAAS;AAACrC,gBAAI,EAAEA,IAAP;AAAaoC,2BAAe,EAAEjB,GAAG,CAACiB,eAAJ,EAA9B;AAAqDX,mBAAO,EAAEA,OAAO,CAACA;AAAtE,WAAT;AACD,SAND;AAOD;AACF,KAbD,EAaGN,GAbH,EAaOe,GAbP,EAaWC,IAbX;AAcD,GAfD;AAiBA0C,YAAU,CAACE,GAAX,CAAe,SAAf,EAA0B,CAAC5D,GAAD,EAAMe,GAAN,KAAc;AACtCf,OAAG,CAAC6F,MAAJ;AACA7F,OAAG,CAAC2B,OAAJ,CAAYmE,OAAZ;AACA/E,OAAG,CAACgF,WAAJ,CAAgB,KAAhB,EAHsC,CAKtC;;AACAhF,OAAG,CAACG,IAAJ,CAAU;AAACC,YAAM,EAAE,GAAT;AAAcF,qBAAe,EAAEjB,GAAG,CAACiB,eAAJ;AAA/B,KAAV;AACD,GAPD;AAQA,SAAOyC,UAAP;AACD,C;;;;;;;;;;;AChHD,MAAMH,MAAM,GAAG9E,mBAAO,CAAE,4BAAF,CAAtB;;AAEA,SAASiD,SAAT,CAAmBS,MAAnB,EAA2B;AAEzB;AACA,QAAME,EAAE,GAAGkB,MAAM,CAACpB,MAAD,CAAjB,CAHyB,CAKvB;;AACFE,IAAE,CAAC2D,EAAH,CAAM,YAAN,EAAoB,UAASzC,MAAT,EAAiBjD,OAAjB,EAA0B;AAE5C;AACApB,WAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,WAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCoE,MAAM,CAACC,OAAP,CAAe7B,OAAxD;AACAzC,WAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDoE,MAAM,CAACC,OAAP,CAAe7B,OAAf,CAAuBhC,QAA/E;AACA,UAAM;AAAEmE;AAAF,QAAeP,MAAM,CAACC,OAAP,CAAe7B,OAAf,CAAuBhC,QAAvB,CAAgCd,IAArD;AACAK,WAAO,CAACC,GAAR,CAAa,GAAE2E,QAAS,sBAAxB;AAEAP,UAAM,CAACyC,EAAP,CAAU,YAAV,EAAyBC,IAAD,IAAU;AAChC/G,aAAO,CAACC,GAAR,CAAY8G,IAAZ;AAEA1C,YAAM,CAAC2C,IAAP,CAAY,cAAZ,EAA4B,UAASD,IAAT,EAAe;AACzC/G,eAAO,CAACC,GAAR,CAAY8G,IAAZ;AACD,OAFD;AAGD,KAND;AAQA1C,UAAM,CAACyC,EAAP,CAAU,MAAV,EAAmBC,IAAD,IAAU;AAC1B,UAAK1C,MAAM,CAACC,OAAP,CAAe7B,OAAf,CAAuBhC,QAAvB,CAAgCd,IAArC,EAA2C;AAEzC,cAAMsH,UAAU,GAAI5C,MAAM,CAACC,OAAP,CAAe7B,OAAf,CAAuBhC,QAAvB,CAAgCd,IAApD;AACAK,eAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgH,UAA3B;AACA,cAAMrC,QAAQ,GAAGqC,UAAU,CAACrC,QAA5B;AACA,cAAMsC,OAAO,GAAGD,UAAU,CAACxF,MAA3B;AACA,cAAM0F,SAAS,GAAGF,UAAU,CAACpC,IAA7B;AACA,cAAMuC,IAAI,GAAGL,IAAI,CAACK,IAAlB;AAEApH,eAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBgH,UAAvB;AAEA5C,cAAM,CAACgD,IAAP,CAAYD,IAAZ,EAAkB,UAASL,IAAT,EAAe;AAC/B/G,iBAAO,CAACC,GAAR,CAAa,GAAE2E,QAAS,eAAcwC,IAAK,EAA3C;AACAjE,YAAE,CAACmE,EAAH,CAAMF,IAAN,EAAYJ,IAAZ,CAAiB,cAAjB,EAAkC;AAChC5F,mBAAO,EAAG,GAAEwD,QAAS,eAAcwC,IAAK,EADR;AAEhCxC,oBAFgC;AAGhCsC,mBAHgC;AAIhCC,qBAJgC;AAKhCC;AALgC,WAAlC;AAOD,SATD;AAWA/C,cAAM,CAACyC,EAAP,CAAU,KAAV,EAAkBC,IAAD,IAAU;AACzB/G,iBAAO,CAACC,GAAR,CAAY8G,IAAZ;AACA1C,gBAAM,CAACkD,SAAP,CAAiBC,EAAjB,CAAoBJ,IAApB,EAA0BJ,IAA1B,CAA+B,OAA/B,EAAwC;AACtCS,iBAAK,EAAEV,IAAI,CAACW,GAD0B;AAEtC9C,oBAAQ,EAAEA,QAF4B;AAGtCsC,mBAAO,EAAEA,OAH6B;AAItCE,gBAAI,EAAEA,IAJgC;AAKtCO,gBAAI,EAAEZ,IAAI,CAACa;AAL2B,WAAxC;AAQD,SAVD;AAWAvD,cAAM,CAACyC,EAAP,CAAU,YAAV,EAAyBC,IAAD,IAAU;AAChC/G,iBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B8G,IAA/B,EADgC,CAEhC;AACA;AACA;AACA;AACA;AACA;AACD,SARD;AASA1C,cAAM,CAACyC,EAAP,CAAU,OAAV,EAAmB,UAAUC,IAAV,EAAgB;AACjC/G,iBAAO,CAACC,GAAR,CAAa,GAAE2E,QAAS,iBAAgBwC,IAAK,EAA7C;AACApH,iBAAO,CAACC,GAAR,CAAY8G,IAAZ;AAEA1C,gBAAM,CAACwD,KAAP,CAAaT,IAAb,EAAmB,UAASL,IAAT,EAAe;AAChC1C,kBAAM,CAACkD,SAAP,CAAiBC,EAAjB,CAAoBJ,IAApB,EAA0BJ,IAA1B,CAA+B,cAA/B,EAAgD;AAC9C5F,qBAAO,EAAG,GAAEwD,QAAS,aAAYwC,IAAK,EADQ;AAE9CxC,sBAF8C;AAG9CsC,qBAH8C;AAI9CC;AAJ8C,aAAhD;AAMD,WAPD;AAQD,SAZD;AAcA9C,cAAM,CAACyC,EAAP,CAAU,WAAV,EAAuB,UAASC,IAAT,EAAe;AACpC/G,iBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B8G,IAA/B;AACA1C,gBAAM,CAACkD,SAAP,CAAiBC,EAAjB,CAAoBJ,IAApB,EAA0BJ,IAA1B,CAA+B,WAA/B;AACD,SAHD;AAID,OA5DD,MA4DO;AACL;AACAhH,eAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,KAjED;AAkED,GAnFD;AAqFA,SAAOkD,EAAP;AACD;;AAED/C,MAAM,CAACC,OAAP,GAAiBmC,SAAjB,C;;;;;;;;;;;;;;;;;;;;;;;AChGA,mC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,sC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'user strict'\n\nconst mysql = require('mysql');\n\nconst connection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"\",\n  database: \"OmnivizTest\",\n});\n\nconnection.connect(function(err) {\n  if (err) throw err;\n  console.log(\"DB Connected!\");\n\n  // création de la dB\n  connection.query(\"CREATE DATABASE IF NOT EXISTS OmnivizTest CHARACTER SET 'utf8'\", function (err, result) {\n    if (err) throw err;\n    console.log(\"database created\");\n  });\n\n  connection.query(\"CREATE TABLE IF NOT EXISTS OmnivizTest.users (userID INT NOT NULL UNIQUE AUTO_INCREMENT, username VARCHAR(50) NOT NULL UNIQUE, email VARCHAR(250) NOT NULL UNIQUE, createdat TIMESTAMP, firstname VARCHAR(255), lastname VARCHAR(255), avatarUrl VARCHAR(500), university VARCHAR(255), password VARCHAR(40) NOT NULL, role VARCHAR(30))\", function(err, result) {\n    if (err) throw err;\n    console.log(\"Table users created\")\n  });\n\n  connection.query(\"CREATE TABLE IF NOT EXISTS OmnivizTest.rooms (roomID INT NOT NULL UNIQUE AUTO_INCREMENT, authorID INT NOT NULL, title VARCHAR(255) NOT NULL, description TEXT(600), createdat TIMESTAMP , startClass INT, endClass INT, PRIMARY KEY(roomID), FOREIGN KEY(authorID) REFERENCES users(userID))\", function(err, result) {\n    if (err) throw err;\n    console.log(\"Table rooms created\")\n  });\n\n  connection.query(\"CREATE TABLE IF NOT EXISTS OmnivizTest.tags (tagID INT NOT NULL UNIQUE AUTO_INCREMENT, userID INT NOT NULL, roomID INT NOT NULL, time TIMESTAMP NOT NULL, color VARCHAR(40), PRIMARY KEY(tagID), FOREIGN KEY(userID) REFERENCES users(userID), FOREIGN KEY(roomID) REFERENCES rooms(roomID))\", function(err, result) {\n    if (err) throw err;\n    console.log(\"Table tags created\")\n  });\n});\n\nmodule.exports = connection","const LocalStrategy   = require('passport-local').Strategy;\nconst bcrypt = require('bcrypt');\nimport connection from '../helpers/db.connexion';\n\n// expose this function to our app using module.exports\nexport default function(passport) {\n\n    // =========================================================================\n    // passport session setup ==================================================\n    // =========================================================================\n    // required for persistent login sessions\n    // passport needs ability to serialize and unserialize users out of session\n\n    // used to serialize the user for the session\n\n\n\n    // =========================================================================\n    // LOCAL SIGNUP ============================================================\n    // =========================================================================\n    // we are using named strategies since we have one for login and one for signup\n    // by default, if there was no name, it would just be called 'local'\n\n    // passport.use(\n    //     'local-signup',\n    //     new LocalStrategy({\n    //         // by default, local strategy uses username and password, we will override with email\n    //         usernameField : 'email',\n    //         passwordField : 'password',\n    //         passReqToCallback : true // allows us to pass back the entire request to the callback\n    //     },\n    //     function(req, email, password, done) {\n    //         // find a user whose email is the same as the forms email\n    //         // we are checking to see if the user trying to register already exists\n    //         connection.query(\"SELECT * FROM users WHERE email = ?\",[email], function(err, result, fields) {\n    //             if (err)\n    //                 return done(err);\n    //             if (result.length > 0) {\n    //                 console.log('email already in use')\n    //                 return done(null, false, req.flash('signupMessage', 'Email is already in use.'));\n    //             } else {\n    //                 // if there is no user with that email\n    //                 // create the user\n    //                 var newUserMysql = {\n    //                     username: email,\n    //                     password: bcrypt.hashSync(password, null, null)  // use the generateHash function in our user model\n    //                 };\n\n    //                 var insertQuery = \"INSERT INTO users ( email, password ) values (?,?)\";\n\n    //                 connection.query(insertQuery,[newUserMysql.email, newUserMysql.password],function(err, rows) {\n    //                     newUserMysql.id = rows.insertId;\n\n    //                     return done(null, newUserMysql);\n    //                 });\n    //             }\n    //         });\n    //     })\n    // );\n\n    // =========================================================================\n    // LOCAL LOGIN =============================================================\n    // =========================================================================\n\n    passport.use(new LocalStrategy({\n            // by default, local strategy uses username and password, we will override with email\n            usernameField : 'email',\n            passwordField : 'password',\n            passReqToCallback : true // allows us to pass back the entire request to the callback\n        },\n        function(req, email, password, done) { // callback with email and password from our form\n            connection.query(\"SELECT * FROM users WHERE email = ?\",[email], function(err, results, fields, user){\n                if (err)\n                    return done(err);\n                if (results.length === 0) {\n                    // console.log('no user found');\n                    // res.send('no user found')\n                    return done(null, false, { message : 'no user found' });\n                } else {\n                    let hashedPassword = results[0].password;\n                    // if the user is found but the password is wrong\n                    bcrypt.compare(password, hashedPassword, function(err, response){\n                        if(response){\n                            // all is well, return successful user\n                            const user = results[0]\n                            console.log('user :', user)\n                            // res.send({status: 200, user: user})\n                            return done(null, user, { message : 'user identified'});\n                        } else {\n                                console.log('wrong password')\n                                // res.send({status: 403, errors: 'wrong password'})\n                                return done(null, false, { message: 'incorrect password'}); // create the loginMessage and save it to session as flashdata\n                            }\n                        // if(err) {\n                        //     console.log(err);\n                        //     return done(null, false, {err: err});\n                        // } else if(response) {\n                        //     const user = results[0];\n                        //     console.log('identified user', user);\n                        //     return done(null, user);\n                        //     }\n                        });\n                    }\n                })\n            }\n        )\n    )\n\n    passport.serializeUser(function(user, done) {\n        console.log('serialize usr_id: ', user.userID)\n\n        done(null, user);\n    });\n\n    // used to deserialize the user\n    passport.deserializeUser(function(user, done) {\n\n        const id = user.userID\n        console.log('deserialize usr id: ', id)\n        connection.query(\"SELECT * FROM users WHERE userID = ? \",[id], function(err, user){\n            done(null, user);\n            // console.log('user : ', user)\n        });\n    });\n};","const verifiedAuth = function (req, res, next) {\n  // if (req.isAuthenticated()) {\n  //   // req.user is available for use here\n  //   return next(); }\n  //   else {res.send({status: 401, message:'unauthorized'})}\n    if (req.isAuthenticated()) {\n      console.log('verifiedAuth :', req.isAuthenticated())\n      // req.user is available for use here\n      // res.send({status: 200, message: 'user identified', isAuthenticated: req.isAuthenticated()})\n      return next();\n    } else {\n      console.log('not authenticated user :', req.isAuthenticated())\n      res.send({status: 401, message:'unauthorized', isAuthenticated: req.isAuthenticated()})}\n};\n\nmodule.exports = verifiedAuth;","const express = require ('express');\n\nconst cors = require('cors');\nconst morgan = require('morgan');\nconst bodyParser = require('body-parser');\nconst cookieParser = require('cookie-parser');\nconst expressValidator = require('express-validator');\nconst bcrypt = require('bcrypt');\n// import { verifiedAuth } from './helpers/verifyAuth';\nconst verifiedAuth = require('./helpers/verifyAuth');\nconst connectIO = require('./sockets/sockets.js')\nimport connection from './helpers/db.connexion';\n\n//authentication packages\nconst session = require('express-session');\nconst MySQLStore = require('express-mysql-session')(session);\nconst passport = require('passport');\n// const passportSocketIo = require(\"passport.socketio\");\n\nrequire('./helpers/passport').default(passport);\n\n\nconst app = express();\n\nconst port = process.env.PORT || 5000;\nconst server = app.listen(port, () => console.log(`server is running on port ${port}`));\n\nconst io = connectIO(server)\n\n//static files\napp.use(express.static('../public'));\n\n//logger\napp.use(morgan('combined'));\n\n//CROSS ORIGINS\napp.use(cors({\n  origin:'http://localhost:8080',\n  methods:['GET', 'POST', 'PUT', 'DELETE'],\n  credentials: true\n}));\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(expressValidator());\n\n//mySQLStore\nconst options = {\n  host: 'localhost',\n  // port: 5000,\n  user: 'root',\n  password: '',\n  database: 'OmnivizTest'\n};\nconst sessionStore = new MySQLStore(options);\n\n// express sessions\nconst sessionMiddleware = session({\n  secret: 'thedudeabides',\n  name: 'sid',\n  store: sessionStore,\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    maxAge: 5400000\n  }\n  // cookie: { secure: true }\n});\napp.use(sessionMiddleware);\n\n// map la session express avec une session socket\nio.use(function (socket, next) {\n  sessionMiddleware(socket.request, socket.request.res, next);\n});\n\n// passport session\napp.use(passport.initialize());\napp.use(passport.session());\n\n\n//routes\nconst userRouter = require('./routes/users').default(io, passport, app);\nconst roomRouter = require('./routes/rooms').default(io, passport, app);\napp.use('/users', userRouter);\napp.use('/rooms', roomRouter)\n\n\napp.get('/', verifiedAuth, (req, res, next) => {\n  const user = req.user[0];\n  const userdata = {\n    username: user.username,\n    email: user.email,\n    role: user.role\n  };\n  // res.send({userdata: userdata, isAuthenticated: req.isAuthenticated()})\n  // console.log('get req session user', req.session.passport)\n  // console.log('username', req.username)\n  console.log('isAuthenticated :', req.isAuthenticated())\n})\n","const express = require('express');\nconst connection = require('../helpers/db.connexion');\nconst verifiedAuth = require('../helpers/verifyAuth');\nconst mysql = require('mysql');\n// import { verifiedAuth } from '../helpers/verifyAuth'\nconst roomRouter = express.Router();\n\nexport default function(app, passport, io) {\n\n  roomRouter.get('/', verifiedAuth, (req, res) => {\n    // console.log(req.isAuthenticated())\n    connection.query('SELECT * FROM rooms ', (err, results, fields) => {\n      if (err) {\n        console.log(err);\n        res.send({\n          err\n        })\n      } else {\n        console.log(results)\n        res.status(200).send({status: true, results: results});\n      }\n    });;\n  });\n\n  roomRouter.post('/', verifiedAuth, (req, res) => {\n\n      req.checkBody('title', 'Title field cannot be empty.').notEmpty();\n\n      const errors = req.validationErrors();\n\n      if (errors) {\n        console.log(`errors: ${JSON.stringify(errors)}`);\n        res.send({\n          status:400,\n          errors: errors\n        });\n      } else {\n        let body = req.body;\n        const { title, description, authorID, createdat, startClass, endClass } = body\n\n        let query = `INSERT INTO rooms (authorID, title, description, createdat, startClass, endClass) VALUES ('${authorID}', '${title}', '${description}', '${createdat}', '${startClass}', '${endClass}')`;\n\n        console.log(query)\n\n          connection.query(query, (errors, results, fields) => {\n            if (errors) {\n              console.log(errors);\n              res.send({\n                status:400,\n                errors:errors\n              });\n            } else{\n              console.log(results);\n              res.send({\n                status:200,\n                \"success\":\"new class created\",\n                content: results\n              });\n            };\n          });\n        }\n    });\n  return roomRouter;\n}","const express = require('express')\nimport connection from '../helpers/db.connexion';\n// import { verifiedAuth } from '../helpers/verifyAuth';\nconst verifiedAuth = require('../helpers/verifyAuth');\nconst mysql = require('mysql');\nconst expressValidator = require('express-validator');\nconst bcrypt = require('bcrypt');\nconst socket = require ('socket.io');\nconst passport = require('passport');\nrequire('../helpers/passport').default(passport);\n// import { io } from '../index';\n\nconst userRouter = express.Router();\n\nexport default function(app, passport, io) {\n  // userRouter.get('/', verifiedAuth, (req, res, next) => {\n  //   //les data du user authentifié peuvent être retrouvées dans l'objet req.user\n  //   const user = req.user[0];\n  //   const userdata = {\n  //     username: user.username,\n  //     email: user.email,\n  //     role: user.role\n  //   };\n\n  //   //renvoie le user + isAuthenticated à true dans le front\n  //   res.send({status: 200, userdata: userdata, isAuthenticated: req.isAuthenticated()})\n  // });\n\n  userRouter.post('/register', (req, res) => {\n\n    req.checkBody('username', 'Username field cannot be empty.').notEmpty();\n    req.checkBody('username', 'Username must be between 4-15 characters long.').len(4, 15);\n    req.checkBody('email', 'The email you entered is invalid, please try again.').isEmail();\n    req.checkBody('email', 'Email address must be between 4-100 characters long, please try again.').len(4, 100);\n    req.checkBody('email', 'Email field cannot be empty.').notEmpty();\n    req.checkBody('password', 'Password field cannot be empty.').notEmpty();\n    req.checkBody('password', 'Password must be between 8-100 characters long.').len(8, 100);\n    req.checkBody(\"password\", \"Password must include one lowercase character, one uppercase character, a number, and a special character.\").matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.* )(?=.*[^a-zA-Z0-9]).{8,}$/, \"i\");\n    req.checkBody('confirmedPassword', 'Password must be between 8-100 characters long.').len(8, 100);\n    req.checkBody('confirmedPassword', 'Passwords do not match, please try again.').equals(req.body.password);\n\n    const errors = req.validationErrors();\n\n    if (errors) {\n      console.log(`errors: ${JSON.stringify(errors)}`);\n      res.send({\n        status:400,\n        errors: errors\n      });\n    } else {\n      let body = req.body;\n      let email = body.email;\n      let username = body.username;\n      let password = body.password;\n      let confirmedPassword = body.confirmedPassword;\n      let firstname = body.firstname;\n      let lastname = body.lastname;\n      let avatarUrl = body.avatarUrl;\n      let university = body.university;\n      let role = body.role;\n\n      const saltRounds = 10;\n\n      bcrypt.hash(password, saltRounds, function(err, hash) {\n        let query = `INSERT INTO users (email, username, password, firstname, lastname, avatarUrl, university, role) VALUES ('${email}', '${username}', '${hash}', '${firstname}', '${lastname}', '${avatarUrl}', '${university}', '${role}')`;\n\n        connection.query(query, (err, results, fields) => {\n          if (errors) {\n            console.log(errors);\n            res.send({\n              status:400,\n              errors:errors\n            });\n          }else{\n            console.log(results);\n            res.send({\n              status:200,\n              \"success\":\"new user registered sucessfully\",\n              content: results\n            });\n          };\n        });\n      });\n    };\n  });\n\n  userRouter.post('/login', (req, res, next) => {\n    passport.authenticate('local',  (err, user, message) => {\n      if(err){\n        res.send({status: 403, errors: message})\n      }\n      else {\n        req.login(user, (err) => {\n          if(err) {\n            console.log(err)\n          }\n          console.log('authentifié', req.isAuthenticated())\n          res.send({user: user, isAuthenticated: req.isAuthenticated(), message: message.message})\n        })\n      }\n    })(req,res,next);\n  });\n\n  userRouter.get('/logout', (req, res) => {\n    req.logout();\n    req.session.destroy();\n    res.clearCookie('sid')\n\n    //envoie isAuthenticated à false dans le front\n    res.send(({status: 200, isAuthenticated: req.isAuthenticated()}))\n  });\n  return userRouter;\n}","const socket = require ('socket.io');\n\nfunction connectIO(server) {\n\n  // Socket Setup\n  const io = socket(server);\n\n    // sockets\n  io.on('connection', function(socket, message) {\n\n    //  on peut récupérer le user serialisé par passport et présent dans l'objet socket.request.session. Les infos de ce user sont disponible pour utilisation dans le reste de l'app\n    console.log('A client has connected');\n    console.log('the socket session object', socket.request.session);\n    console.log('the actual serialized user from passport', socket.request.session.passport);\n    const { username } = socket.request.session.passport.user\n    console.log(`${username} has opened a socket`)\n\n    socket.on('createRoom', (data) => {\n      console.log(data);\n\n      socket.emit('roomCreation', function(data) {\n        console.log(data)\n      });\n    })\n\n    socket.on('join', (data) => {\n      if ( socket.request.session.passport.user) {\n\n        const socketUser =  socket.request.session.passport.user\n        console.log('scoket user', socketUser)\n        const username = socketUser.username;\n        const user_id = socketUser.userID;\n        const user_role = socketUser.role;\n        const room = data.room;\n\n        console.log('socket:', socketUser)\n\n        socket.join(room, function(data) {\n          console.log(`${username} has joined ${room}`);\n          io.in(room).emit('joiningEvent', ({\n            message: `${username} has joined ${room}`,\n            username,\n            user_id,\n            user_role,\n            room,\n          }));\n        });\n\n        socket.on('tag', (data) => {\n          console.log(data)\n          socket.broadcast.to(room).emit('event', {\n            color: data.tag,\n            username: username,\n            user_id: user_id,\n            room: room,\n            time: data.timestamp,\n            },\n          )\n        })\n        socket.on('disconnect', (data) => {\n          console.log('disconnection :', data)\n          // const username = socketUser[0].username;\n          // const user_id = socketUser[0].userID\n          // const room = data.room;\n          // console.log(room)\n          // socket.leave(room, console.log(`${username} has left ${room}`));\n          // socket.broadcast.to(room).emit('leavingEvent',({ message: `${username} has left the room ${room}`}));\n        })\n        socket.on('leave', function (data) {\n          console.log(`${username} has left the ${room}`)\n          console.log(data)\n\n          socket.leave(room, function(data) {\n            socket.broadcast.to(room).emit('leavingEvent', ({\n              message: `${username} has left ${room}`,\n              username,\n              user_id,\n              user_role,\n            }));\n          });\n        });\n\n        socket.on('closeRoom', function(data) {\n          console.log('classe fermée :', data)\n          socket.broadcast.to(room).emit('closeRoom')\n        })\n      } else {\n        //Ne marche pas...trouver la solution\n        console.log(\"c'est la merde\")\n      }\n    });\n  });\n\n  return io\n}\n\nmodule.exports = connectIO;\n\n","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"express-mysql-session\");","module.exports = require(\"express-session\");","module.exports = require(\"express-validator\");","module.exports = require(\"morgan\");","module.exports = require(\"mysql\");","module.exports = require(\"passport\");","module.exports = require(\"passport-local\");","module.exports = require(\"socket.io\");"],"sourceRoot":""}