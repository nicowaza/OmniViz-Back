{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/helpers/db.connexion.js","webpack:///./src/helpers/passport.js","webpack:///./src/helpers/passportAuthorize.js","webpack:///./src/helpers/verifyAuth.js","webpack:///./src/index.js","webpack:///./src/routes/rooms.js","webpack:///./src/routes/users.js","webpack:///./src/socket/sockets.js","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"express-mysql-session\"","webpack:///external \"express-session\"","webpack:///external \"express-validator\"","webpack:///external \"morgan\"","webpack:///external \"mysql\"","webpack:///external \"passport\"","webpack:///external \"passport-local\"","webpack:///external \"passport.socketio\"","webpack:///external \"socket.io\""],"names":["mysql","require","connection","createConnection","host","user","password","database","connect","err","console","log","query","result","module","exports","LocalStrategy","Strategy","bcrypt","passport","use","usernameField","passwordField","passReqToCallback","req","email","done","results","fields","length","message","hashedPassword","compare","response","serializeUser","userID","deserializeUser","id","onAuthorizeSuccess","data","accept","onAuthorizeFail","error","Error","verifiedAuth","res","next","isAuthenticated","send","status","express","socket","cors","morgan","bodyParser","cookieParser","expressValidator","session","MySQLStore","passportSocketIo","default","app","port","process","env","PORT","server","listen","static","origin","methods","credentials","json","urlencoded","extended","options","sessionStore","sessionMiddleware","secret","name","store","resave","saveUninitialized","cookie","maxAge","initialize","io","authorize","key","success","fail","userRouter","roomRouter","get","username","export","Router","userdata","role","post","checkBody","notEmpty","len","isEmail","matches","equals","body","errors","validationErrors","JSON","stringify","confirmedPassword","firstname","lastname","avatarUrl","university","saltRounds","hash","content","authenticate","login","logout","destroy","clearCookie","on","request","logged_in","socketUser","user_id","room","emit","join","broadcast","to","datagreen","greenTag","tag","time","timestamp","datayellow","yellowTag","datared","redTag","datablue","blueTag","leave"],"mappings":"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,CAAkC0B,EAAlC,EAAsCnE,QAAtC,EAAgD0C,GAAhD,CAAnB;;AACA,MAAM+B,UAAU,GAAG3F,mBAAO,CAAC,6CAAD,CAAP,CAA0B2D,OAA1B,CAAkC0B,EAAlC,EAAsCnE,QAAtC,EAAgD0C,GAAhD,CAAnB;;AACAA,GAAG,CAACzC,GAAJ,CAAQ,QAAR,EAAkBuE,UAAlB;AACA9B,GAAG,CAACzC,GAAJ,CAAQ,QAAR,EAAkBwE,UAAlB;AAGA/B,GAAG,CAACgC,GAAJ,CAAQ,GAAR,EAAajD,gEAAb,EAA2B,CAACpB,GAAD,EAAMqB,GAAN,KAAc;AACvCA,KAAG,CAACG,IAAJ,CAAS,aAAT;AACAtC,SAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCa,GAAG,CAACiC,OAAJ,CAAYtC,QAAhD;AACAT,SAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBa,GAAG,CAACsE,QAA5B;AACApF,SAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Ba,GAAG,CAACuB,eAAJ,EAA/B,EAJuC,CAKvC;AACD,CAND,E,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'user strict'\n\nconst mysql = require('mysql');\n\nconst connection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"\",\n  database: \"OmnivizTest\",\n});\n\nconnection.connect(function(err) {\n  if (err) throw err;\n  console.log(\"DB Connected!\");\n\n  // création de la dB\n  connection.query(\"CREATE DATABASE IF NOT EXISTS OmnivizTest CHARACTER SET 'utf8'\", function (err, result) {\n    if (err) throw err;\n    console.log(\"database created\");\n  });\n\n  connection.query(\"CREATE TABLE IF NOT EXISTS OmnivizTest.users (userID INT NOT NULL UNIQUE AUTO_INCREMENT, username VARCHAR(50) NOT NULL UNIQUE, email VARCHAR(250) NOT NULL UNIQUE, createdat TIMESTAMP, firstname VARCHAR(255), lastname VARCHAR(255), avatarUrl VARCHAR(500), university VARCHAR(255), password VARCHAR(40) NOT NULL, role VARCHAR(30))\", function(err, result) {\n    if (err) throw err;\n    console.log(\"Table users created\")\n  });\n\n//   connection.query(\"CREATE TABLE IF NOT EXISTS OmnivizTest.courses (coursesID INT NOT NULL UNIQUE AUTO_INCREMENT, authorID   \")\n});\n\nmodule.exports = connection","const LocalStrategy   = require('passport-local').Strategy;\nconst bcrypt = require('bcrypt');\nimport connection from '../helpers/db.connexion';\n\n// expose this function to our app using module.exports\nexport default function(passport) {\n\n    // =========================================================================\n    // passport session setup ==================================================\n    // =========================================================================\n    // required for persistent login sessions\n    // passport needs ability to serialize and unserialize users out of session\n\n    // used to serialize the user for the session\n\n\n\n    // =========================================================================\n    // LOCAL SIGNUP ============================================================\n    // =========================================================================\n    // we are using named strategies since we have one for login and one for signup\n    // by default, if there was no name, it would just be called 'local'\n\n    // passport.use(\n    //     'local-signup',\n    //     new LocalStrategy({\n    //         // by default, local strategy uses username and password, we will override with email\n    //         usernameField : 'email',\n    //         passwordField : 'password',\n    //         passReqToCallback : true // allows us to pass back the entire request to the callback\n    //     },\n    //     function(req, email, password, done) {\n    //         // find a user whose email is the same as the forms email\n    //         // we are checking to see if the user trying to register already exists\n    //         connection.query(\"SELECT * FROM users WHERE email = ?\",[email], function(err, result, fields) {\n    //             if (err)\n    //                 return done(err);\n    //             if (result.length > 0) {\n    //                 console.log('email already in use')\n    //                 return done(null, false, req.flash('signupMessage', 'Email is already in use.'));\n    //             } else {\n    //                 // if there is no user with that email\n    //                 // create the user\n    //                 var newUserMysql = {\n    //                     username: email,\n    //                     password: bcrypt.hashSync(password, null, null)  // use the generateHash function in our user model\n    //                 };\n\n    //                 var insertQuery = \"INSERT INTO users ( email, password ) values (?,?)\";\n\n    //                 connection.query(insertQuery,[newUserMysql.email, newUserMysql.password],function(err, rows) {\n    //                     newUserMysql.id = rows.insertId;\n\n    //                     return done(null, newUserMysql);\n    //                 });\n    //             }\n    //         });\n    //     })\n    // );\n\n    // =========================================================================\n    // LOCAL LOGIN =============================================================\n    // =========================================================================\n\n    passport.use(new LocalStrategy({\n            // by default, local strategy uses username and password, we will override with email\n            usernameField : 'email',\n            passwordField : 'password',\n            passReqToCallback : true // allows us to pass back the entire request to the callback\n        },\n        function(req, email, password, done) { // callback with email and password from our form\n            connection.query(\"SELECT * FROM users WHERE email = ?\",[email], function(err, results, fields, user){\n                if (err)\n                    return done(err);\n                if (results.length === 0) {\n                    // console.log('no user found');\n                    // res.send('no user found')\n                    return done(null, false, { message : 'no user found' });\n                } else {\n                    let hashedPassword = results[0].password;\n                    // if the user is found but the password is wrong\n                    bcrypt.compare(password, hashedPassword, function(err, response){\n                        if(response){\n                            // all is well, return successful user\n                            const user = results[0]\n                            console.log('user :', user)\n                            // res.send({status: 200, user: user})\n                            return done(null, user, { message : 'user identified'});\n                        } else {\n                                console.log('wrong password')\n                                // res.send({status: 403, errors: 'wrong password'})\n                                return done(null, false, { message: 'incorrect password'}); // create the loginMessage and save it to session as flashdata\n                            }\n                        // if(err) {\n                        //     console.log(err);\n                        //     return done(null, false, {err: err});\n                        // } else if(response) {\n                        //     const user = results[0];\n                        //     console.log('identified user', user);\n                        //     return done(null, user);\n                        //     }\n                        });\n                    }\n                })\n            }\n        )\n    )\n\n    passport.serializeUser(function(user, done) {\n        console.log('serialize usr_id: ', user.userID)\n\n        done(null, user.userID);\n    });\n\n    // used to deserialize the user\n    passport.deserializeUser(function(id, done) {\n        console.log('deserialize usr id: ', id)\n\n        connection.query(\"SELECT * FROM users WHERE userID = ? \",[id], function(err, user){\n            done(null, user);\n            // console.log('user : ', user)\n        });\n    });\n};","// const passportSocketIo = require(\"passport.socketio\");\n\n// const verifyIoConnection = function () {\n//   io.use(passportSocketIo.authorize({\n//     cookieParser: cookieParser,\n//     key: 'sid',\n//     secret: 'thedudeabides',\n//     store: sessionStore,\n//     passport: passport,\n//     success: onAuthorizeSuccess,\n//     fail: onAuthorizeFail,\n//   }));\n\n//   function onAuthorizeSuccess(data, accept){\n//     console.log('successful connection to socket.io');\n//     // console.log(data)\n//     accept();\n//   }\n\n//   function onAuthorizeFail(data, message, error, accept){\n\n//     // error indicates whether the fail is due to an error or just a unauthorized client\n//     if(error)  {\n//       console.log(error)\n//       throw new Error(message);\n//     }\n//     // send the (not-fatal) error-message to the client and deny the connection\n//     console.log(error)\n//     console.log(\"unauthorized: you're not logged in\");\n//     return accept(new Error(message));\n//   }\n// }\n\n// module.exports = verifyIoConnection;\nconst onAuthorizeSuccess = (data, accept) => {\n  console.log('successful connection to socket.io');\n  // console.log(data)\n  accept();\n}\n\nconst onAuthorizeFail = (data, message, error, accept) => {\n\n  // error indicates whether the fail is due to an error or just a unauthorized client\n  if(error)  {\n    // console.log(error)\n    throw new Error(message);\n  }\n  // send the (not-fatal) error-message to the client and deny the connection\n  console.log(error)\n  console.log(\"unauthorized: you're not logged in\");\n  return accept(new Error(message));\n}\n\nmodule.exports = {\n  onAuthorizeSuccess,\n  onAuthorizeFail,\n}","export const verifiedAuth = function (req, res, next) {\n  if (req.isAuthenticated()) {\n    // req.user is available for use here\n    return next(); }\n    else {res.send({status: 401, message:'unauthorized'})}\n};\n","const express = require ('express');\nconst socket = require ('socket.io');\nconst cors = require('cors');\nconst morgan = require('morgan');\nconst bodyParser = require('body-parser');\nconst cookieParser = require('cookie-parser');\nconst expressValidator = require('express-validator');\nconst bcrypt = require('bcrypt');\nimport { verifiedAuth } from './helpers/verifyAuth';\nimport connection from './helpers/db.connexion';\n// const { onAuthorizeSuccess, onAuthorizeFail } = require('./helpers/passportAuthorize');\n// import { onAuthorizeSuccess, onAuthorizeFail} from './helpers/passportAuthorize';\n\n//authentication packages\nconst session = require('express-session');\nconst MySQLStore = require('express-mysql-session')(session);\nconst passport = require('passport');\nconst passportSocketIo = require(\"passport.socketio\");\n\nrequire('./helpers/passport').default(passport);\n\n\nconst app = express();\n\nconst port = process.env.PORT || 5000;\nconst server = app.listen(port, () => console.log(`server is running on port ${port}`));\n\n\n// Socket Setup\n// const io = socket(server);\nrequire('./socket/sockets')(server);\n\n//static files\napp.use(express.static('../public'));\n\n//logger\napp.use(morgan('combined'));\n\n//CROSS ORIGINS\napp.use(cors({\n  origin:'http://localhost:8080',\n  methods:['GET', 'POST', 'PUT', 'DELETE'],\n  credentials: true\n}));\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(expressValidator());\n\n//mySQLStore\nconst options = {\n  host: 'localhost',\n  // port: 5000,\n  user: 'root',\n  password: '',\n  database: 'OmnivizTest'\n};\nconst sessionStore = new MySQLStore(options);\n\n// express sessions\nconst sessionMiddleware = session({\n  secret: 'thedudeabides',\n  name: 'sid',\n  store: sessionStore,\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    maxAge: 1000 * 60 * 60 * 1\n  }\n  // cookie: { secure: true }\n});\napp.use(sessionMiddleware);\n\n\n//passport session\napp.use(passport.initialize());\napp.use(passport.session());\n\n\n//passportSocketIo mapp la session express avec une session socket.io => permet d'authoriser les échanges d'events qu'une fois l'utilisateur loggé. Permet de récupérer l'utilisateur serialisé par passport\nio.use(passportSocketIo.authorize({\n  cookieParser: cookieParser,\n  key: 'sid',\n  secret: 'thedudeabides',\n  store: sessionStore,\n  passport: passport,\n  success: onAuthorizeSuccess,\n  fail: onAuthorizeFail,\n}));\n\n\n function onAuthorizeSuccess(data, accept){\n    console.log('successful connection to socket.io');\n    // console.log(data)\n    accept();\n  }\n\nfunction onAuthorizeFail(data, message, error, accept){\n\n  // error indicates whether the fail is due to an error or just a unauthorized client\n  if(error)  {\n    console.log(error)\n    throw new Error(message);\n  }\n  // send the (not-fatal) error-message to the client and deny the connection\n  console.log(error)\n  console.log(\"unauthorized: you're not logged in\");\n  return accept(new Error(message));\n}\n\n\n// io.use((socket,next) => {\n//   sessionMiddleware(socket.request, socket.request.res || {}, next);\n// });\n\n// app.use('/realtime', realtimeRouter);\nconst userRouter = require('./routes/users').default(io, passport, app);\nconst roomRouter = require('./routes/rooms').default(io, passport, app);\napp.use('/users', userRouter);\napp.use('/rooms', roomRouter)\n\n\napp.get('/', verifiedAuth, (req, res) => {\n  res.send('hello world')\n  console.log('get req session user', req.session.passport)\n  console.log('username', req.username)\n  console.log('authenticated :', req.isAuthenticated())\n  // })(req,res,next);\n})\n\n// io.on('connection', function(socket, message) {\n//   console.log('connection')\n//   if (socket.request.user && socket.request.user.logged_in) {\n//     socket.on('join', (data) => {\n//       const socketUser = socket.request.user\n//       const { username, userID: user_id } = socketUser[0];\n//       const room = data.room;\n//       console.log('room :', room)\n//       console.log('socket:', socketUser)\n//       console.log('socket user :', socket.request.user)\n//       console.log('username :', username);\n\n//       socket.emit('roomCreation', {\n//       username: username,\n//       room: room,\n//       });\n\n//       socket.join(room, console.log(`${username} has joined ${room}`));\n\n//       socket.emit('joiningEvent', {\n//         message: `${username} has joined the room ${room}`\n//       });\n\n//       socket.broadcast.to(room).emit('joiningEvent', ({ message: `${username} has joined the room ${room}`}));// console.log(socket.request.user);\n\n//       socket.on('greenPing', (data) => {\n//         const datagreen = data;\n//         console.log(datagreen);\n//         socket.broadcast.to(room).emit('greenTag', {\n//           greenTag: datagreen.tag,\n//           username: username,\n//           user_id: user_id,\n//           room: room,\n//           time: datagreen.timestamp,\n//           },\n//         )\n//       });\n\n//       socket.on('yellowPing', (data) => {\n//         const datayellow = data;\n//         console.log(datayellow);\n//         socket.broadcast.to(room).emit('yellowTag', {\n//           yellowTag: datayellow.tag,\n//           username: username,\n//           user_id: user_id,\n//           room: room,\n//           time: datayellow.timestamp,\n//           },\n//         )\n//       });\n\n//       socket.on('redPing', (data) => {\n//         const datared = data;\n//         console.log(datared);\n//         socket.broadcast.to(room).emit('redTag', {\n//           redTag: datared.tag,\n//           username: username,\n//           user_id: user_id,\n//           room: room,\n//           time: datared.timestamp,\n//           },\n//         )\n//       });\n\n//       socket.on('bluePing', (data) => {\n//         const datablue = data;\n//         console.log(datablue);\n//         socket.broadcast.to(room).emit('blueTag', {\n//           blueTag: datablue.tag,\n//           username: username,\n//           user_id: user_id,\n//           room: room,\n//           time: datablue.timestamp,\n//           },\n//         )\n//       });\n\n//       socket.on('leave', (data) => {\n//         const username = socketUser[0].username;\n//         const user_id = socketUser[0].userID\n//         const room = data.room;\n//         socket.leave(room, console.log(`${username} has left ${room}`));\n//         socket.to(room).emit('leavingEvent',({ message: `${username} has left the room ${room}`}));\n//       })\n//     });\n//     // socket.on('leave', function () {\n//     //   console.log(`${username} has disconnected`)\n//     //       io.emit('user disconnected');\n//           // });\n//     } else {\n//         //Ne marche pas...trouver la solution\n//         console.log('unauthorized')\n//   }\n// })\n// // io.on('connection', function(socket, message) {\n\n\n//   socket.on('join', (data) => {\n//     if (socket.request.user && socket.request.user.logged_in) {\n\n//       const socketUser = socket.request.user\n//       // console.log('username: ', socketUser.username);\n//       // console.log('room: ', data.room)\n//       // console.log('id: ', socket.id)\n//       const username = socketUser[0].username;\n//       const room = data.room;\n//       console.log('socket:', socketUser)\n//       console.log('socket user :', socket.request.user)\n//       console.log('username :', username)\n//       // const socketId = socket.id\n//       socket.emit('roomCreation', {\n//       username: username,\n//       room: room,\n//       });\n//       socket.join(room, console.log(`${username} has joined ${room}`));\n//       socket.emit('joiningEvent', `${username} has joined the room ${room}`);\n//       socket.broadcast.to(room).emit('joiningEvent', `${username} has joined the room ${room}`);// console.log(socket.request.user);\n//     } else if(!socket.request.user.logged_in){\n\n//     }\n// });\n// // error handler\n// app.use(function(err, req, res, next) {\n//   // set locals, only providing error in development\n//   res.locals.message = err.message;\n//   res.locals.error = req.app.get('env') === 'development' ? err : {};\n// })\n// // io.on('connection', function(socket){\n// //   socket.on('connect', function() {\n// //     io.emit('user connected');\n// //   });\n// //   socket.on('disconnect', function () {\n// //     io.emit('user disconnected');\n// //   });\n// //   console.log('socket connected', socket.id)\n// //   socket.emit('messageChannel', 'hello')\n// //   socket.on('pingServer', (data) => {\n// //     console.log(data)\n// //   })\n// //   socket.on('join', (data) => {\n// //     console.log('username: ', data.username);\n// //     console.log('room: ', data.room)\n// //     console.log('id: ', socket.id)\n// //     const user = data.username;\n// //     const room = data.room;\n// //     const userId = socket.id;\n// //     socket.emit('roomCreation', {\n// //     user: user,\n// //     room: room,\n// //     userId: userId\n// //     });\n// //     socket.join(room, console.log(`${user} has joined ${room}`));\n// //     socket.emit('joiningEvent', `${user} has joined the room ${room}`);\n// //     socket.broadcast.to(room).emit('joiningEvent', `${user} has joined the room ${room}`);\n    // })\n\nmodule.export = server;","const express = require('express');\nconst connection = require('../helpers/db.connexion');\nconst verifiedAuth = require('../helpers/verifyAuth');\nconst mysql = require('mysql');\n\nconst roomRouter = express.Router();\n\nexport default function(app, passport, io) {\n\n  roomRouter.get('/', (req, res) => {\n    // console.log(io);\n\n    connection.query('SELECT * FROM rooms ', (err, results, fields) => {\n      if (err) {\n        console.log(err);\n        res.send({\n          err\n        })\n      }else {\n        console.log(results)\n        // const result = JSON.stringify(results);\n        // console.log(result)\n        res.status(200).send({status: true, results: results});\n      }\n    });\n  });\n\n  return roomRouter;\n}","const express = require('express')\nimport connection from '../helpers/db.connexion';\nimport { verifiedAuth } from '../helpers/verifyAuth';\nconst { onAuthorizeSuccess } = require('../helpers/passportAuthorize');\nconst mysql = require('mysql');\nconst expressValidator = require('express-validator');\nconst bcrypt = require('bcrypt');\nconst socket = require ('socket.io');\nconst passport = require('passport');\n// const passportSocketIo = require(\"passport.socketio\");\nrequire('../helpers/passport').default(passport);\n// import { io } from '../index';\n\nconst userRouter = express.Router();\n\nexport default function(app, passport, io) {\n\n  // io.on('connection', function(socket, message) {\n  //   console.log('socket request user :', socket.request.user)\n  //   console.log(socket.request.user.logged_in)\n  //   console.log('user connected')\n  // })\n\n  userRouter.get('/', verifiedAuth, (req, res, next) => {\n    //les data du user authentifié peuvent être retrouvées dans l'objet req.user\n    const user = req.user[0];\n    const userdata = {\n      username: user.username,\n      email: user.email,\n      role: user.role\n    };\n    // console.log(req.isAuthenticated())\n    // console.log('user data', userdata)\n    // console.log('the request session object', req.session);\n    // console.log('the serialized user from passport', req.user);\n    // console.log('the socket session object', socket.request.session);\n    // console.log('the actual serialized user from passport', socket.request.session.passport.user);\n\n    //renvoie le user + isAuthenticated à true dans le front\n    res.send({status: 200, userdata: userdata, isAuthenticated: req.isAuthenticated()})\n    // passport.authenticate('local', (errors, user) =>{\n    //   if(errors) {\n    //     throw errors\n    //   } else {\n    //     // console.log('username', req.user.username)\n    //     res.send(JSON.stringify(user.username))\n    //   }\n\n    // })(req,res,next);\n\n\n    // connection.query('SELECT * FROM users ', (err, results, fields) => {\n    //   if (err) {\n    //     console.log(err);\n    //     res.status(400).send({ status: false, message: 'User not created'})\n    //     // res.send({\n    //     //   err\n    //     // })\n    //   }else {\n    //     console.log(results)\n    //     res.status(200).send({status: true, content: results});\n    //   }\n    // });\n  });\n\n  userRouter.post('/register', (req, res) => {\n\n    req.checkBody('username', 'Username field cannot be empty.').notEmpty();\n    req.checkBody('username', 'Username must be between 4-15 characters long.').len(4, 15);\n    req.checkBody('email', 'The email you entered is invalid, please try again.').isEmail();\n    req.checkBody('email', 'Email address must be between 4-100 characters long, please try again.').len(4, 100);\n    req.checkBody('email', 'Email field cannot be empty.').notEmpty();\n    req.checkBody('password', 'Password field cannot be empty.').notEmpty();\n    req.checkBody('password', 'Password must be between 8-100 characters long.').len(8, 100);\n    req.checkBody(\"password\", \"Password must include one lowercase character, one uppercase character, a number, and a special character.\").matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.* )(?=.*[^a-zA-Z0-9]).{8,}$/, \"i\");\n    req.checkBody('confirmedPassword', 'Password must be between 8-100 characters long.').len(8, 100);\n    req.checkBody('confirmedPassword', 'Passwords do not match, please try again.').equals(req.body.password);\n\n    const errors = req.validationErrors();\n\n    if (errors) {\n      console.log(`errors: ${JSON.stringify(errors)}`);\n      res.send({\n        status:400,\n        errors: errors\n      });\n    } else {\n      let body = req.body;\n      let email = body.email;\n      let username = body.username;\n      let password = body.password;\n      let confirmedPassword = body.confirmedPassword;\n      let firstname = body.firstname;\n      let lastname = body.lastname;\n      let avatarUrl = body.avatarUrl;\n      let university = body.university;\n      let role = body.role;\n\n      const saltRounds = 10;\n\n      bcrypt.hash(password, saltRounds, function(err, hash) {\n        let query = `INSERT INTO users (email, username, password, firstname, lastname, avatarUrl, university, role) VALUES ('${email}', '${username}', '${hash}', '${firstname}', '${lastname}', '${avatarUrl}', '${university}', '${role}')`;\n\n        connection.query(query, (err, results, fields) => {\n          if (errors) {\n            console.log(errors);\n            res.send({\n              status:400,\n              errors:errors\n            });\n          }else{\n            console.log(results);\n            res.send({\n              status:200,\n              \"success\":\"new user registered sucessfully\",\n              content: results\n            });\n          };\n        });\n      });\n    };\n  });\n\n  userRouter.post('/login', (req, res, next) => {\n    passport.authenticate('local', (err, user, message) => {\n      if(err){\n        res.send({status: 401, errors: message})\n      }\n      else {\n        req.login(user,(err) => {\n          if(err) {\n            console.log(err)\n          } else {\n            console.log(req.isAuthenticated())\n            res.send({user: user, isAuthenticated: req.isAuthenticated(), message: message.message})\n          }\n        })\n  }\n      // else {\n      //   req.login(user, (err) => {\n      //     if(err) {\n      //       console.log(err)\n      //     }\n      //     // console.log('req login :', user)\n      //     // console.log('login req.session', req.session)\n      //     // console.log('req.user :' ,req.user)\n      //     console.log('authenticated :', req.isAuthenticated())\n      //     //renvoie isAuthenticated à true dans le front\n      //     res.send({errors: err, isAuthenticated: req.isAuthenticated()})\n      //   })\n        // console.log(io);\n        // const userSockets = {}\n\n        // io.on('connection', function(socket) {\n        //   console.log('A client has connected');\n        //   console.log('the socket session object', socket.request.session);\n        //   console.log('the actual serialized user from passport', socket.request.session.passport.user);\n        //   //store '_id' of connected user in order to access it easily\n        //   const ID = socket.request.session.passport.user;\n        //   //store actual socket of connected user in order to access it easily\n        //   //from other modules e.g. from router\n        //   userSockets[ID] = socket;\n        //   connection.query(\"SELECT * FROM users WHERE userID = ? \",[ID], function(err, user){\n        //     if(err){\n        //       console.log(err)\n        //       throw(err)\n        //     } else {\n        //       // console.log(user)\n        //       const firstname = user[0].firstname;\n        //       const email = user[0].email;\n        //       const username = user[0].username;\n\n        //       console.log([firstname, username, email])\n        //       console.log(socket)\n        //       return socket.emit('welcome', `hello ${firstname} you are connected as ${username}`)\n        //     }\n        //   })\n        // });\n      // }\n    })(req,res,next);\n  });\n\n  userRouter.get('/logout', (req, res) => {\n    req.logout();\n    req.session.destroy();\n    res.clearCookie('sid')\n    // console.log('authenticated :', req.isAuthenticated())\n\n    //envoie isAuthenticated à false dans le front\n    res.send(({status: 200, isAuthenticated: req.isAuthenticated()}))\n  });\n  return userRouter;\n}","const { server } = require('../index.js');\nconst socket = ('socket.io');\n\nmodule.exports.listen = function(server) {\n  const io = socket.listen(server);\n\n\n  io.on('connection', function(socket, message) {\n    console.log('connection')\n    if (socket.request.user && socket.request.user.logged_in) {\n      socket.on('join', (data) => {\n        const socketUser = socket.request.user\n        const { username, userID: user_id } = socketUser[0];\n        const room = data.room;\n        console.log('room :', room)\n        console.log('socket:', socketUser)\n        console.log('socket user :', socket.request.user)\n        console.log('username :', username);\n\n        socket.emit('roomCreation', {\n        username: username,\n        room: room,\n        });\n\n        socket.join(room, console.log(`${username} has joined ${room}`));\n\n        socket.emit('joiningEvent', {\n          message: `${username} has joined the room ${room}`\n        });\n\n        socket.broadcast.to(room).emit('joiningEvent', ({ message: `${username} has joined the room ${room}`}));// console.log(socket.request.user);\n\n        socket.on('greenPing', (data) => {\n          const datagreen = data;\n          console.log(datagreen);\n          socket.broadcast.to(room).emit('greenTag', {\n            greenTag: datagreen.tag,\n            username: username,\n            user_id: user_id,\n            room: room,\n            time: datagreen.timestamp,\n            },\n          )\n        });\n\n        socket.on('yellowPing', (data) => {\n          const datayellow = data;\n          console.log(datayellow);\n          socket.broadcast.to(room).emit('yellowTag', {\n            yellowTag: datayellow.tag,\n            username: username,\n            user_id: user_id,\n            room: room,\n            time: datayellow.timestamp,\n            },\n          )\n        });\n\n        socket.on('redPing', (data) => {\n          const datared = data;\n          console.log(datared);\n          socket.broadcast.to(room).emit('redTag', {\n            redTag: datared.tag,\n            username: username,\n            user_id: user_id,\n            room: room,\n            time: datared.timestamp,\n            },\n          )\n        });\n\n        socket.on('bluePing', (data) => {\n          const datablue = data;\n          console.log(datablue);\n          socket.broadcast.to(room).emit('blueTag', {\n            blueTag: datablue.tag,\n            username: username,\n            user_id: user_id,\n            room: room,\n            time: datablue.timestamp,\n            },\n          )\n        });\n\n        socket.on('leave', (data) => {\n          const username = socketUser[0].username;\n          const user_id = socketUser[0].userID\n          const room = data.room;\n          socket.leave(room, console.log(`${username} has left ${room}`));\n          socket.to(room).emit('leavingEvent',({ message: `${username} has left the room ${room}`}));\n        })\n      });\n      // socket.on('leave', function () {\n      //   console.log(`${username} has disconnected`)\n      //       io.emit('user disconnected');\n            // });\n      } else {\n          //Ne marche pas...trouver la solution\n          console.log('unauthorized')\n    }\n  })\n  // io.on('connection', function(socket, message) {\n\n}\n\n\n\n\n","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"express-mysql-session\");","module.exports = require(\"express-session\");","module.exports = require(\"express-validator\");","module.exports = require(\"morgan\");","module.exports = require(\"mysql\");","module.exports = require(\"passport\");","module.exports = require(\"passport-local\");","module.exports = require(\"passport.socketio\");","module.exports = require(\"socket.io\");"],"sourceRoot":""}