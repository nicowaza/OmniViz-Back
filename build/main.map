{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helpers/db.connexion.js","webpack:///./src/helpers/passport.js","webpack:///./src/helpers/verifyAuth.js","webpack:///./src/index.js","webpack:///./src/routes/users.js","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"express-mysql-session\"","webpack:///external \"express-session\"","webpack:///external \"express-validator\"","webpack:///external \"morgan\"","webpack:///external \"mysql\"","webpack:///external \"passport\"","webpack:///external \"passport-local\"","webpack:///external \"socket.io\""],"names":["mysql","require","connection","createConnection","host","user","password","database","connect","err","console","log","query","result","module","exports","LocalStrategy","Strategy","bcrypt","passport","use","usernameField","passwordField","passReqToCallback","req","email","done","results","fields","length","hashedPassword","compare","response","serializeUser","userID","deserializeUser","id","verifiedAuth","res","next","isAuthenticated","send","status","message","express","socket","cors","morgan","bodyParser","cookieParser","expressValidator","session","MySQLStore","default","app","port","process","env","PORT","server","listen","io","static","origin","methods","credentials","json","urlencoded","extended","options","sessionStore","sessionMiddleware","secret","name","store","resave","saveUninitialized","cookie","maxAge","initialize","socketMiddleware","handshake","userRouter","get","username","userSockets","set","data","accept","headers","Router","userdata","post","checkBody","notEmpty","len","isEmail","matches","equals","body","errors","validationErrors","JSON","stringify","confirmedPassword","firstname","lastname","avatarUrl","university","role","saltRounds","hash","content","authenticate","login","on","ID","emit","logout","destroy"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'user strict'\n\nconst mysql = require('mysql');\n\nconst connection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"\",\n  database: \"OmnivizTest\",\n});\n\nconnection.connect(function(err) {\n  if (err) throw err;\n  console.log(\"DB Connected!\");\n\n  // création de la dB\n  connection.query(\"CREATE DATABASE IF NOT EXISTS OmnivizTest CHARACTER SET 'utf8'\", function (err, result) {\n    if (err) throw err;\n    console.log(\"database created\");\n  });\n\n  connection.query(\"CREATE TABLE IF NOT EXISTS OmnivizTest.users (userID INT NOT NULL UNIQUE AUTO_INCREMENT, username VARCHAR(50) NOT NULL UNIQUE, email VARCHAR(250) NOT NULL UNIQUE, createdat TIMESTAMP, firstname VARCHAR(255), lastname VARCHAR(255), avatarUrl VARCHAR(500), university VARCHAR(255), password VARCHAR(40) NOT NULL, role VARCHAR(30))\", function(err, result) {\n    if (err) throw err;\n    console.log(\"Table users created\")\n  })\n});\n\nmodule.exports = connection","const LocalStrategy   = require('passport-local').Strategy;\nconst bcrypt = require('bcrypt');\nimport connection from '../helpers/db.connexion';\n\n// expose this function to our app using module.exports\nexport default function(passport) {\n\n    // =========================================================================\n    // passport session setup ==================================================\n    // =========================================================================\n    // required for persistent login sessions\n    // passport needs ability to serialize and unserialize users out of session\n\n    // used to serialize the user for the session\n\n\n\n    // =========================================================================\n    // LOCAL SIGNUP ============================================================\n    // =========================================================================\n    // we are using named strategies since we have one for login and one for signup\n    // by default, if there was no name, it would just be called 'local'\n\n    // passport.use(\n    //     'local-signup',\n    //     new LocalStrategy({\n    //         // by default, local strategy uses username and password, we will override with email\n    //         usernameField : 'email',\n    //         passwordField : 'password',\n    //         passReqToCallback : true // allows us to pass back the entire request to the callback\n    //     },\n    //     function(req, email, password, done) {\n    //         // find a user whose email is the same as the forms email\n    //         // we are checking to see if the user trying to register already exists\n    //         connection.query(\"SELECT * FROM users WHERE email = ?\",[email], function(err, result, fields) {\n    //             if (err)\n    //                 return done(err);\n    //             if (result.length > 0) {\n    //                 console.log('email already in use')\n    //                 return done(null, false, req.flash('signupMessage', 'Email is already in use.'));\n    //             } else {\n    //                 // if there is no user with that email\n    //                 // create the user\n    //                 var newUserMysql = {\n    //                     username: email,\n    //                     password: bcrypt.hashSync(password, null, null)  // use the generateHash function in our user model\n    //                 };\n\n    //                 var insertQuery = \"INSERT INTO users ( email, password ) values (?,?)\";\n\n    //                 connection.query(insertQuery,[newUserMysql.email, newUserMysql.password],function(err, rows) {\n    //                     newUserMysql.id = rows.insertId;\n\n    //                     return done(null, newUserMysql);\n    //                 });\n    //             }\n    //         });\n    //     })\n    // );\n\n    // =========================================================================\n    // LOCAL LOGIN =============================================================\n    // =========================================================================\n\n    passport.use(new LocalStrategy({\n            // by default, local strategy uses username and password, we will override with email\n            usernameField : 'email',\n            passwordField : 'password',\n            passReqToCallback : true // allows us to pass back the entire request to the callback\n        },\n        function(req, email, password, done) { // callback with email and password from our form\n            connection.query(\"SELECT * FROM users WHERE email = ?\",[email], function(err, results, fields){\n                if (err)\n                    return done(err);\n                if (results.length === 0) {\n                    console.log('no user found');\n                    return done(null, false);\n                } else {\n                    let hashedPassword = results[0].password;\n                    // if the user is found but the password is wrong\n                    bcrypt.compare(password, hashedPassword, function(err, response){\n                        // console.log('hashedpassword :', hashedPassword)\n                        // console.log('password :', password)\n                        if(response == true){\n                            // all is well, return successful user\n                            console.log(results)\n                            const user = results[0]\n                            console.log('user :', user)\n\n                            return done(null, user);\n                        } else {\n                                console.log('wrong password')\n                                return done(null, false); // create the loginMessage and save it to session as flashdata\n                            }\n                        });\n                    }\n                })\n            }\n        )\n    )\n\n    passport.serializeUser(function(user, done) {\n        console.log('serialize usr_id: ', user.userID)\n\n        done(null, user.userID);\n    });\n\n    // used to deserialize the user\n    passport.deserializeUser(function(id, done) {\n        console.log('deserialize usr id: ', id)\n\n        connection.query(\"SELECT * FROM users WHERE userID = ? \",[id], function(err, user){\n            done(null, user);\n            // console.log('user : ', user)\n        });\n    });\n};","export const verifiedAuth = function (req, res, next) {\n  if (req.isAuthenticated()) {\n    // req.user is available for use here\n    return next(); }\n    else {res.send({status: 401, message:'unauthorized'})}\n};\n","const express = require ('express');\nconst socket = require ('socket.io');\nconst cors = require('cors');\nconst morgan = require('morgan');\nconst bodyParser = require('body-parser');\nconst cookieParser = require('cookie-parser')\nconst expressValidator = require('express-validator');\nconst bcrypt = require('bcrypt');\nimport { verifiedAuth } from './helpers/verifyAuth';\nimport connection from './helpers/db.connexion';\n\n//authentication packages\nconst session = require('express-session');\nconst MySQLStore = require('express-mysql-session')(session);\nconst passport = require('passport');\nrequire('./helpers/passport').default(passport);\n\n\nconst app = express();\n\nconst port = process.env.PORT || 5000;\nconst server = app.listen(port, () => console.log(`server is running on port ${port}`));\n\n// import { realtimeRouter } from './routes/index';\n// import { userRouter } from './routes/users';\n// Socket Setup\nconst io = socket(server);\n//static files\napp.use(express.static('../public'));\n\n//CROSS ORIGINS\napp.use(cors({\n  origin:'http://localhost:8080',\n  methods:['GET', 'POST', 'PUT', 'DELETE'],\n  credentials: true\n}));\n\n//logger\napp.use(morgan('combined'));\n\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use\napp.use(expressValidator());\n\n//mySQLStore\nconst options = {\n  host: 'localhost',\n  // port: 5000,\n  user: 'root',\n  password: '',\n  database: 'OmnivizTest'\n};\nconst sessionStore = new MySQLStore(options);\n\n// express sessions\nconst sessionMiddleware = session({\n  secret: 'thedudeabides',\n  name: 'sessionSid',\n  store: sessionStore,\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    maxAge: 1000 * 60 * 60 * 2\n  }\n  // cookie: { secure: true }\n});\napp.use(sessionMiddleware);\n\n//passport session\napp.use(passport.initialize());\napp.use(passport.session());\n\nconst socketMiddleware = function(socket, next) {\n  sessionMiddleware(socket.handshake, {}, next);\n}\n\nio.use(socketMiddleware);\n// io.use((socket,next) => {\n//   sessionMiddleware(socket.request, {}, next);\n// });\n\n// app.use('/realtime', realtimeRouter);\nconst userRouter = require('./routes/users').default(io, passport, app);\napp.use('/users', userRouter);\n\n\napp.get('/', verifiedAuth, (req, res) => {\n  res.send('hello world')\n  console.log('get req session user', req.session.passport)\n  console.log('username', req.username)\n  console.log('authenticated :', req.isAuthenticated())\n  // })(req,res,next);\n})\n\n\n// // error handler\n// app.use(function(err, req, res, next) {\n//   // set locals, only providing error in development\n//   res.locals.message = err.message;\n//   res.locals.error = req.app.get('env') === 'development' ? err : {};\n// })\nconst userSockets = {}\nio.set(\"authorization\", function(data, accept) {\n  //FOR SUCCESS\n  accept(null, true);\n  console.log(data.headers.cookie)\n\n\n  //FOR FAILURE\n  return accept('Error Message.', false);\n});\n\n// io.on('connection', function(socket) {\n//   console.log('A client has connected');\n//   console.log('the socket session object', socket.handshake.session);\n//   console.log('the actual serialized user from passport', socket.handshake.session.passport.user);\n//   //store '_id' of connected user in order to access it easily\n//   const ID = socket.handshake.session.passport.user;\n//   //store actual socket of connected user in order to access it easily\n//   //from other modules e.g. from router\n//   userSockets[ID] = socket;\n//   console.log(socket.user)\n//   connection.query(\"SELECT * FROM users WHERE userID = ? \",[ID], function(err, user){\n//     if(err){\n//       console.log(err)\n//       throw(err)\n//     } else {\n//       // console.log(user)\n//       const firstname = user[0].firstname;\n//       const email = user[0].email;\n//       const username = user[0].username;\n\n//       socket.user\n//       console.log([firstname, username, email])\n\n//       return socket.emit('welcome', `hello ${socket.user} you are connected as ${username}`)\n\n//     }\n//   })\n// });\n// io.on('connection', function(socket) {\n//   console.log('A client has connected');\n//   console.log('the socket session object', socket.handshake.session);\n//   console.log('the actual serialized user from passport', socket.handshake.session.passport.user);\n// });\n//   //store '_id' of connected user in order to access it easily\n//   const ID = socket.request.session.passport.user;\n//   //store actual socket of connected user in order to access it easily\n//   //from other modules e.g. from router\n//   userSockets[ID] = socket;\n//   connection.query(\"SELECT * FROM users WHERE userID = ? \",[ID], function(err, user){\n//     if(err){\n//       console.log(err)\n//       throw(err)\n//     } else {\n//       // console.log(user)\n//       const firstname = user[0].firstname;\n//       const email = user[0].email;\n//       const username = user[0].username;\n\n//       console.log([firstname, username, email])\n//       return socket.emit('welcome', `hello ${firstname} you are connected as ${username}`)\n//     }\n//     })\n//   });\n// // io.on('connection', function(socket){\n// //   socket.on('connect', function() {\n// //     io.emit('user connected');\n// //   });\n// //   socket.on('disconnect', function () {\n// //     io.emit('user disconnected');\n// //   });\n// //   console.log('socket connected', socket.id)\n// //   socket.emit('messageChannel', 'hello')\n// //   socket.on('pingServer', (data) => {\n// //     console.log(data)\n// //   })\n//   socket.on('join', (data) => {\n//     console.log('username: ', data.username);\n//     console.log('room: ', data.room)\n//     console.log('id: ', socket.id)\n//     const user = data.username;\n//     const room = data.room;\n//     const userId = socket.id;\n//     socket.emit('roomCreation', {\n//     user: user,\n//     room: room,\n//     userId: userId\n//     });\n//     socket.join(room, console.log(`${user} has joined ${room}`));\n//     socket.emit('joiningEvent', `${user} has joined the room ${room}`);\n//     socket.broadcast.to(room).emit('joiningEvent', `${user} has joined the room ${room}`);\n// //     })\n//   })\n","const express = require ('express');\nimport connection from '../helpers/db.connexion';\nimport { verifiedAuth } from '../helpers/verifyAuth';\nconst mysql = require('mysql');\nconst expressValidator = require('express-validator');\nconst bcrypt = require('bcrypt');\nconst socket = require ('socket.io');\nconst passport = require('passport');\nrequire('../helpers/passport').default(passport);\n// import { io } from '../index';\n\nconst userRouter = express.Router();\n\nexport default function(app, passport, io) {\n  userRouter.get('/', verifiedAuth, (req, res, next) => {\n    //les data du user authentifié peuvent être retrouvées dans l'objet req.user\n    const user = req.user[0];\n    const userdata = {\n      username: user.username,\n      email: user.email\n    };\n\n    console.log('user data', userdata)\n    console.log('the request session object', req.session);\n    console.log('the serialized user from passport', req.user);\n    res.send({status: 200, userdata: userdata})\n    // passport.authenticate('local', (errors, user) =>{\n    //   if(errors) {\n    //     throw errors\n    //   } else {\n    //     // console.log('username', req.user.username)\n    //     res.send(JSON.stringify(user.username))\n    //   }\n\n    // })(req,res,next);\n\n\n    // connection.query('SELECT * FROM users ', (err, results, fields) => {\n    //   if (err) {\n    //     console.log(err);\n    //     res.status(400).send({ status: false, message: 'User not created'})\n    //     // res.send({\n    //     //   err\n    //     // })\n    //   }else {\n    //     console.log(results)\n    //     res.status(200).send({status: true, content: results});\n    //   }\n    // });\n  });\n\n  userRouter.post('/register', (req, res) => {\n\n    req.checkBody('username', 'Username field cannot be empty.').notEmpty();\n    req.checkBody('username', 'Username must be between 4-15 characters long.').len(4, 15);\n    req.checkBody('email', 'The email you entered is invalid, please try again.').isEmail();\n    req.checkBody('email', 'Email address must be between 4-100 characters long, please try again.').len(4, 100);\n    req.checkBody('email', 'Email field cannot be empty.').notEmpty();\n    req.checkBody('password', 'Password field cannot be empty.').notEmpty();\n    req.checkBody('password', 'Password must be between 8-100 characters long.').len(8, 100);\n    req.checkBody(\"password\", \"Password must include one lowercase character, one uppercase character, a number, and a special character.\").matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.* )(?=.*[^a-zA-Z0-9]).{8,}$/, \"i\");\n    req.checkBody('confirmedPassword', 'Password must be between 8-100 characters long.').len(8, 100);\n    req.checkBody('confirmedPassword', 'Passwords do not match, please try again.').equals(req.body.password);\n\n    const errors = req.validationErrors();\n\n    if (errors) {\n      console.log(`errors: ${JSON.stringify(errors)}`);\n      res.send({\n        errors: errors\n      });\n    } else {\n      let body = req.body;\n      let email = body.email;\n      let username = body.username;\n      let password = body.password;\n      let confirmedPassword = body.confirmedPassword;\n      let firstname = body.firstname;\n      let lastname = body.lastname;\n      let avatarUrl = body.avatarUrl;\n      let university = body.university;\n      let role = body.role;\n\n      const saltRounds = 10;\n\n      bcrypt.hash(password, saltRounds, function(err, hash) {\n        let query = `INSERT INTO users (email, username, password, firstname, lastname, avatarUrl, university, role) VALUES ('${email}', '${username}', '${hash}', '${firstname}', '${lastname}', '${avatarUrl}', '${university}', '${role}')`;\n\n        connection.query(query, (err, results, fields) => {\n          if (errors) {\n            console.log(errors);\n            res.status(400).send({ status: false, message: 'User not created'})\n          }else{\n            console.log(results);\n            res.send({\n              status:200,\n              \"success\":\"new user registered sucessfully\",\n              content: results\n            });\n          };\n        });\n      });\n    };\n  });\n\n  userRouter.post('/login', (req, res, next) => {\n    passport.authenticate('local',  (errors, user) => {\n      if(errors){\n        res.send({status: 500, message: 'something went wrong'})\n      } else {\n        req.login(user, (err) => {\n          if(err) throw(err)\n          // console.log('req login :', user)\n          // console.log('login req.session', req.session)\n          // console.log('req.user :' ,req.user)\n          console.log('authenticated :', req.isAuthenticated())\n          res.send(JSON.stringify(user))\n        })\n        // console.log(io);\n        // console.log('socket :', socket.handshake.session);\n        // console.log('the actual serialized user from passport', socket.handshake.session.passport.user);\n        const userSockets = {}\n        io.on('connection', function(socket) {\n          console.log('A client has connected');\n          console.log('the socket session object', socket.handshake.session);\n          console.log('the actual serialized user from passport', socket.handshake.session.passport.user);\n          //store '_id' of connected user in order to access it easily\n          const ID = socket.handshake.session.passport.user;\n          //store actual socket of connected user in order to access it easily\n          //from other modules e.g. from router\n          userSockets[ID] = socket;\n          connection.query(\"SELECT * FROM users WHERE userID = ? \",[ID], function(err, user){\n            if(err){\n              console.log(err)\n              throw(err)\n            } else {\n              // console.log(user)\n              const firstname = user[0].firstname;\n              const email = user[0].email;\n              const username = user[0].username;\n\n              console.log([firstname, username, email])\n              return socket.emit('welcome', `hello ${firstname} you are connected as ${username}`)\n            }\n          })\n        });\n       }\n    })(req,res,next);\n  });\n\n  userRouter.get('/logout', (req, res) => {\n    req.logout();\n    req.session.destroy();\n    console.log('authenticated :', req.isAuthenticated())\n    res.send(({status: 200, message: 'user has logged out'}))\n  });\n  return userRouter;\n}\n","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"express-mysql-session\");","module.exports = require(\"express-session\");","module.exports = require(\"express-validator\");","module.exports = require(\"morgan\");","module.exports = require(\"mysql\");","module.exports = require(\"passport\");","module.exports = require(\"passport-local\");","module.exports = require(\"socket.io\");"],"sourceRoot":""}